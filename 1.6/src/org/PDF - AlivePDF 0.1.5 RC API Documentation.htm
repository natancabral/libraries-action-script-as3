<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- saved from url=(0014)about:internet -->
<html><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8"><link rel="stylesheet" href="PDF%20-%20AlivePDF%200.1.5%20RC%20API%20Documentation_arquivos/style.css" type="text/css" media="screen"><link rel="stylesheet" href="PDF%20-%20AlivePDF%200.1.5%20RC%20API%20Documentation_arquivos/print.css" type="text/css" media="print"><link rel="stylesheet" href="PDF%20-%20AlivePDF%200.1.5%20RC%20API%20Documentation_arquivos/override.css" type="text/css"><meta name="keywords" content="PDF,org.alivepdf.pdf.PDF,_cache_UTF8StringToArrayKeys,_cache_UTF8StringToArray,_cache_maxsize_UTF8StringToArray,_cache_size_UTF8StringToArray,isUnicode,totalFonts,totalPages,UTF8StringToArray,_putfontwidths,addAnnotation,addBookmark,addCell,addCellFitScale,addCellFitScaleForce,addCellFitSpace,addCellFitSpaceForce,addCodaBar,addEPSImage,addEventListener,addFont,addGrid,addImage,addImageStream,addJavaScript,addLink,addMultiCell,addPage,addText,addTransition,arrUTF8ToUTF16BE,beginBitmapFill,beginFill,clippedCell,clippingCircle,clippingEllipse,clippingPolygon,clippingRect,clippingRoundedRect,clippingText,clip,countUniqueValues,curveTo,dispatchEvent,drawCircle,drawEllipse,drawLine,drawPolygone,drawRect,drawRoundRect,drawRoundRectComplex,drawSector,end,endFill,escapeIt,footer,fromCharCode,getCurrentInternalLink,getCurrentPage,getDefaultOrientation,getDefaultSize,getDefaultUnit,getFonts,getMargins,getPage,getPages,getX,getY,gotoPage,hasEventListener,header,implode,insertFonts,lineStyle,lineTo,linearGradient,moveTo,newLine,putcidfont0,radialGradient,removeAllPages,removeEventListener,removeFont,removePage,resetMargins,rotate,rotatePage,save,setAdvanceTiming,setAliasNbPages,setAlpha,setAuthor,setAutoPageBreak,setBottomMargin,setCreator,setDisplayMode,setFont,setFontSize,setGridPositionOnNextPages,setKeywords,setLeftMargin,setMargins,setRightMargin,setStartingPage,setSubject,setTitle,setTopMargin,setViewerPreferences,setVisible,setX,setXY,setY,skew,textStyle,toString,unsetClipping,willTrigger,writeFlashHtmlText,writeFlashHtmlText,writeStream,writeText"><title>PDF - AlivePDF 0.1.5 RC API Documentation</title></head><body><script language="javascript" type="text/javascript" src="PDF%20-%20AlivePDF%200.1.5%20RC%20API%20Documentation_arquivos/asdoc.js"></script><script language="javascript" type="text/javascript" src="PDF%20-%20AlivePDF%200.1.5%20RC%20API%20Documentation_arquivos/help.js"></script><script language="javascript" type="text/javascript" src="PDF%20-%20AlivePDF%200.1.5%20RC%20API%20Documentation_arquivos/cookies.js"></script><script language="javascript" type="text/javascript"><!--
				asdocTitle = 'PDF - AlivePDF 0.1.5 RC API Documentation';
				var baseRef = '../../../';
				window.onload = configPage;
			--></script>
<script type="text/javascript">
			scrollToNameAnchor();
		</script><table class="titleTable" id="titleTable" style="" cellpadding="0" cellspacing="0"><tbody><tr><td class="titleTableTitle" align="left">AlivePDF 0.1.5 RC API Documentation</td><td class="titleTableTopNav" align="right"><a href="http://alivepdf.bytearray.org/alivepdf-asdoc/package-summary.html" onclick="loadClassListFrame('../../../all-classes.html')">All Packages</a>&nbsp;|&nbsp;<a href="http://alivepdf.bytearray.org/alivepdf-asdoc/class-summary.html" onclick="loadClassListFrame('../../../all-classes.html')">All Classes</a>&nbsp;|&nbsp;<a href="http://alivepdf.bytearray.org/alivepdf-asdoc/all-index-A.html" onclick="loadClassListFrame('../../../index-list.html')">Index</a>&nbsp;|&nbsp;<a id="framesLink1" href="http://alivepdf.bytearray.org/alivepdf-asdoc/index.html?org/alivepdf/pdf/PDF.html&amp;org/alivepdf/pdf/class-list.html">Frames</a><a id="noFramesLink1" style="display:none" href="" onclick="parent.location=document.location"> No Frames </a></td><td class="titleTableLogo" rowspan="3" align="right"><img src="PDF%20-%20AlivePDF%200.1.5%20RC%20API%20Documentation_arquivos/logo.jpg" class="logoImage" alt=" Adobe Logo " title=" Adobe Logo "></td></tr><tr class="titleTableRow2"><td class="titleTableSubTitle" id="subTitle" align="left">PDF</td><td class="titleTableSubNav" id="subNav" align="right"><a href="#propertySummary">Properties</a>&nbsp;| <a href="#methodSummary">Methods</a>&nbsp;| <a href="#eventSummary">Events</a></td></tr><tr class="titleTableRow3"><td colspan="3">&nbsp;</td></tr></tbody></table><script language="javascript" type="text/javascript" xml:space="preserve">
				<!--
				
					if (!isEclipse() || window.name != ECLIPSE_FRAME_NAME) {titleBar_setSubTitle("PDF"); titleBar_setSubNav(false,true,false,false,false,false,true,false,true,false,false	,false,false,false,false,false);}	
				-->
			</script><div xmlns:fn="http://www.w3.org/2005/xpath-functions" class="MainContent"><table class="classHeaderTable" cellpadding="0" cellspacing="0"><tbody><tr><td class="classHeaderTableLabel">Package</td><td><a href="http://alivepdf.bytearray.org/alivepdf-asdoc/org/alivepdf/pdf/package-detail.html" onclick="javascript:loadClassListFrame('class-list.html')">org.alivepdf.pdf</a></td></tr><tr><td class="classHeaderTableLabel">Class</td><td class="classSignature">public  class  PDF</td></tr><tr><td class="classHeaderTableLabel">Inheritance</td><td class="inheritanceList">PDF  <img src="PDF%20-%20AlivePDF%200.1.5%20RC%20API%20Documentation_arquivos/inherit-arrow.gif" title="Inheritance" alt="Inheritance" class="inheritArrow"> Object</td></tr><tr><td class="classHeaderTableLabel">Implements</td><td> flash.events.IEventDispatcher</td></tr><tr><td class="classHeaderTableLabel">Subclasses</td><td> <a href="http://alivepdf.bytearray.org/alivepdf-asdoc/org/alivepdf/billing/Invoice.html">Invoice</a>,  <a href="http://alivepdf.bytearray.org/alivepdf-asdoc/org/alivepdf/pdf/UnicodePDF.html">UnicodePDF</a></td></tr></tbody></table><p></p><p></p><p></p>
	 The PDF class represents a PDF document.
	 
	 <p></p><br><hr></div><a name="propertySummary"></a><div class="summarySection"><div class="summaryTableTitle">Public Properties</div><table class="summaryTable " id="summaryTableProperty" cellpadding="3" cellspacing="0"><tbody><tr><th>&nbsp;</th><th colspan="2">Property</th><th class="summaryTableOwnerCol">Defined By</th></tr><tr class="" bgcolor="#FFFFFF"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><a href="#totalFonts" class="signatureLink">totalFonts</a> : int<div class="summaryTableDescription">[read-only] 
		 Lets you retrieve the total number of fonts used in the PDF document.</div></td><td class="summaryTableOwnerCol">PDF</td></tr><tr class="" bgcolor="#F2F2F2"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><a href="#totalPages" class="signatureLink">totalPages</a> : int<div class="summaryTableDescription">[read-only] 
		 Lets you retrieve the number of pages in the PDF document.</div></td><td class="summaryTableOwnerCol">PDF</td></tr></tbody></table></div><a name="methodSummary"></a><div class="summarySection"><div class="summaryTableTitle">Public Methods </div><table class="summaryTable " id="summaryTableMethod" cellpadding="3" cellspacing="0"><tbody><tr><th>&nbsp;</th><th colspan="2">Method</th><th class="summaryTableOwnerCol">Defined By</th></tr><tr class="" bgcolor="#FFFFFF"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#PDF%28%29" class="signatureLink">PDF</a>(orientation:String = Portrait, unit:String = Mm, autoPageBreak:Boolean = true, pageSize:<a href="http://alivepdf.bytearray.org/alivepdf-asdoc/org/alivepdf/layout/Size.html">Size</a> = null, rotation:int = 0)</div><div class="summaryTableDescription">
		 The PDF class represents a PDF document.</div></td><td class="summaryTableOwnerCol">PDF</td></tr><tr class="" bgcolor="#F2F2F2"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#addAnnotation%28%29" class="signatureLink">addAnnotation</a>(annotation:<a href="http://alivepdf.bytearray.org/alivepdf-asdoc/org/alivepdf/annotations/Annotation.html">Annotation</a>):void</div><div class="summaryTableDescription">
		 Lets you add an annotation to the current page
		 </div></td><td class="summaryTableOwnerCol">PDF</td></tr><tr class="" bgcolor="#FFFFFF"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#addBookmark%28%29" class="signatureLink">addBookmark</a>(text:String, level:int = 0, y:Number = -1, color:<a href="http://alivepdf.bytearray.org/alivepdf-asdoc/org/alivepdf/colors/RGBColor.html">RGBColor</a> = null):void</div><div class="summaryTableDescription">
		 Lets you add a bookmark.</div></td><td class="summaryTableOwnerCol">PDF</td></tr><tr class="" bgcolor="#F2F2F2"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#addCell%28%29" class="signatureLink">addCell</a>(width:Number = 0, height:Number = 0, text:String, border:* = 0, ln:Number = 0, align:String, fill:Number = 0, link:<a href="http://alivepdf.bytearray.org/alivepdf-asdoc/org/alivepdf/links/ILink.html">ILink</a> = null):void</div><div class="summaryTableDescription">
		 Add a cell with some text to the current page.</div></td><td class="summaryTableOwnerCol">PDF</td></tr><tr class="" bgcolor="#FFFFFF"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#addCellFitScale%28%29" class="signatureLink">addCellFitScale</a>(width:Number, height:Number = 0, text:String, border:* = 0, ln:Number = 0, align:String, fill:Number = 0, link:<a href="http://alivepdf.bytearray.org/alivepdf-asdoc/org/alivepdf/links/ILink.html">ILink</a> = null):void</div><div class="summaryTableDescription">
		 Adds a cell with horizontal scaling only if necessary
		 </div></td><td class="summaryTableOwnerCol">PDF</td></tr><tr class="" bgcolor="#F2F2F2"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#addCellFitScaleForce%28%29" class="signatureLink">addCellFitScaleForce</a>(width:Number, height:Number = 0, text:String, border:* = 0, ln:Number = 0, align:String, fill:Number = 0, link:<a href="http://alivepdf.bytearray.org/alivepdf-asdoc/org/alivepdf/links/ILink.html">ILink</a> = null):void</div><div class="summaryTableDescription">
		 Adds a cell with horizontal scaling always
		 </div></td><td class="summaryTableOwnerCol">PDF</td></tr><tr class="" bgcolor="#FFFFFF"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#addCellFitSpace%28%29" class="signatureLink">addCellFitSpace</a>(width:Number, height:Number = 0, text:String, border:* = 0, ln:Number = 0, align:String, fill:Number = 0, link:<a href="http://alivepdf.bytearray.org/alivepdf-asdoc/org/alivepdf/links/ILink.html">ILink</a> = null):void</div><div class="summaryTableDescription">
		 Adds a cell with character spacing only if necessary
		 </div></td><td class="summaryTableOwnerCol">PDF</td></tr><tr class="" bgcolor="#F2F2F2"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#addCellFitSpaceForce%28%29" class="signatureLink">addCellFitSpaceForce</a>(width:Number, height:Number = 0, text:String, border:* = 0, ln:Number = 0, align:String, fill:Number = 0, link:<a href="http://alivepdf.bytearray.org/alivepdf-asdoc/org/alivepdf/links/ILink.html">ILink</a> = null):void</div><div class="summaryTableDescription">
		 Adds a cell with character spacing always
		 </div></td><td class="summaryTableOwnerCol">PDF</td></tr><tr class="" bgcolor="#FFFFFF"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#addCodaBar%28%29" class="signatureLink">addCodaBar</a>(codaBar:<a href="http://alivepdf.bytearray.org/alivepdf-asdoc/org/alivepdf/codabar/CodaBar.html">CodaBar</a>):void</div><div class="summaryTableDescription">
		 Allows you to add a CodaBar (Monarch) to the current page at any position.</div></td><td class="summaryTableOwnerCol">PDF</td></tr><tr class="" bgcolor="#F2F2F2"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#addEPSImage%28%29" class="signatureLink">addEPSImage</a>(stream:ByteArray, x:Number = 0, y:Number = 0, w:Number = 0, h:Number = 0, useBoundingBox:Boolean = true):void</div><div class="summaryTableDescription">
		 The addEPSImage method takes an incoming EPS (.eps) file or Adobe® Illustrator® file (.ai) and render it on the current page.</div></td><td class="summaryTableOwnerCol">PDF</td></tr><tr class="" bgcolor="#FFFFFF"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#addEventListener%28%29" class="signatureLink">addEventListener</a>(type:String, listener:Function, useCapture:Boolean = false, priority:int = 0, useWeakReference:Boolean = false):void</div><div class="summaryTableDescription"></div></td><td class="summaryTableOwnerCol">PDF</td></tr><tr class="" bgcolor="#F2F2F2"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#addGrid%28%29" class="signatureLink">addGrid</a>(grid:<a href="http://alivepdf.bytearray.org/alivepdf-asdoc/org/alivepdf/grid/Grid.html">Grid</a>, x:Number = 0, y:Number = 0, repeatHeader:Boolean = true):void</div><div class="summaryTableDescription">
		 Adds a dynamic table to the current page.</div></td><td class="summaryTableOwnerCol">PDF</td></tr><tr class="" bgcolor="#FFFFFF"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#addImage%28%29" class="signatureLink">addImage</a>(displayObject:DisplayObject, resizeMode:<a href="http://alivepdf.bytearray.org/alivepdf-asdoc/org/alivepdf/layout/Resize.html">Resize</a>
 = null, x:Number = 0, y:Number = 0, width:Number = 0, height:Number = 
0, rotation:Number = 0, alpha:Number = 1, keepTransformation:Boolean = 
true, imageFormat:String = PNG, quality:Number = 100, blendMode:String =
 Normal, link:<a href="http://alivepdf.bytearray.org/alivepdf-asdoc/org/alivepdf/links/ILink.html">ILink</a> = null):void</div><div class="summaryTableDescription">
		 The addImage method takes an incoming DisplayObject.</div></td><td class="summaryTableOwnerCol">PDF</td></tr><tr class="" bgcolor="#F2F2F2"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#addImageStream%28%29" class="signatureLink">addImageStream</a>(imageBytes:ByteArray, colorSpace:String, resizeMode:<a href="http://alivepdf.bytearray.org/alivepdf-asdoc/org/alivepdf/layout/Resize.html">Resize</a>
 = null, x:Number = 0, y:Number = 0, width:Number = 0, height:Number = 
0, rotation:Number = 0, alpha:Number = 1, blendMode:String = Normal, 
link:<a href="http://alivepdf.bytearray.org/alivepdf-asdoc/org/alivepdf/links/ILink.html">ILink</a> = null):void</div><div class="summaryTableDescription">
		 The addImageStream method takes an incoming image as a ByteArray.</div></td><td class="summaryTableOwnerCol">PDF</td></tr><tr class="" bgcolor="#FFFFFF"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#addJavaScript%28%29" class="signatureLink">addJavaScript</a>(script:String):void</div><div class="summaryTableDescription">
		 The addJavaScript allows you to inject JavaScript code to be executed when the PDF document is opened.</div></td><td class="summaryTableOwnerCol">PDF</td></tr><tr class="" bgcolor="#F2F2F2"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#addLink%28%29" class="signatureLink">addLink</a>(x:Number, y:Number, width:Number, height:Number, link:<a href="http://alivepdf.bytearray.org/alivepdf-asdoc/org/alivepdf/links/ILink.html">ILink</a>, highlight:String = I):void</div><div class="summaryTableDescription">
		 Lets you add clickable link to a specific position
		 Link can be internal (document level navigation) or external (HTTP).</div></td><td class="summaryTableOwnerCol">PDF</td></tr><tr class="" bgcolor="#FFFFFF"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#addMultiCell%28%29" class="signatureLink">addMultiCell</a>(width:Number, height:Number, text:String, border:* = 0, align:String = J, filled:int = 0):void</div><div class="summaryTableDescription">
		 Add a multicell with some text to the current page.</div></td><td class="summaryTableOwnerCol">PDF</td></tr><tr class="" bgcolor="#F2F2F2"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#addPage%28%29" class="signatureLink">addPage</a>(page:<a href="http://alivepdf.bytearray.org/alivepdf-asdoc/org/alivepdf/pages/Page.html">Page</a> = null):<a href="http://alivepdf.bytearray.org/alivepdf-asdoc/org/alivepdf/pages/Page.html">Page</a></div><div class="summaryTableDescription">
		 Lets you add a page to the current PDF.</div></td><td class="summaryTableOwnerCol">PDF</td></tr><tr class="" bgcolor="#FFFFFF"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#addText%28%29" class="signatureLink">addText</a>(text:String, x:Number = 0, y:Number = 0):void</div><div class="summaryTableDescription">
		 Lets you set some text to any position on the page.</div></td><td class="summaryTableOwnerCol">PDF</td></tr><tr class="" bgcolor="#F2F2F2"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#addTransition%28%29" class="signatureLink">addTransition</a>(style:String = R, duration:Number = 1, dimension:String = H, motionDirection:String = I, transitionDirection:int = 0):void</div><div class="summaryTableDescription">
		 Lets you add a transition between each PDF page
		 Note : PDF must be shown in fullscreen to see the transitions, use 
the setDisplayMode method with the PageMode.FULL_SCREEN parameter.</div></td><td class="summaryTableOwnerCol">PDF</td></tr><tr class="" bgcolor="#FFFFFF"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#beginBitmapFill%28%29" class="signatureLink">beginBitmapFill</a>(bitmap:BitmapData, matrix:Matrix = null):void</div><div class="summaryTableDescription">
		 The beginBitmapFill method fills a surface with a bitmap as a texture.</div></td><td class="summaryTableOwnerCol">PDF</td></tr><tr class="" bgcolor="#F2F2F2"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#beginFill%28%29" class="signatureLink">beginFill</a>(color:<a href="http://alivepdf.bytearray.org/alivepdf-asdoc/org/alivepdf/colors/IColor.html">IColor</a>, tint:Number = 100):void</div><div class="summaryTableDescription">
		 Sets the filling color for different color spaces CMYK, RGB or DEVICEGRAY.</div></td><td class="summaryTableOwnerCol">PDF</td></tr><tr class="" bgcolor="#FFFFFF"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#clip%28%29" class="signatureLink">clip</a>(x:Number, y:Number, width:Number, height:Number):void</div><div class="summaryTableDescription"></div></td><td class="summaryTableOwnerCol">PDF</td></tr><tr class="" bgcolor="#F2F2F2"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#clippedCell%28%29" class="signatureLink">clippedCell</a>(width:Number, height:Number = 0, text:String, border:* = 0, ln:Number = 0, align:String, fill:Number = 0, link:<a href="http://alivepdf.bytearray.org/alivepdf-asdoc/org/alivepdf/links/ILink.html">ILink</a> = null):void</div><div class="summaryTableDescription"></div></td><td class="summaryTableOwnerCol">PDF</td></tr><tr class="" bgcolor="#FFFFFF"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#clippingCircle%28%29" class="signatureLink">clippingCircle</a>(x:Number, y:Number, radius:Number, outline:Boolean = false):void</div><div class="summaryTableDescription"></div></td><td class="summaryTableOwnerCol">PDF</td></tr><tr class="" bgcolor="#F2F2F2"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#clippingEllipse%28%29" class="signatureLink">clippingEllipse</a>(x:Number, y:Number, ty:Number, ry:Number, outline:Boolean = false):void</div><div class="summaryTableDescription"></div></td><td class="summaryTableOwnerCol">PDF</td></tr><tr class="" bgcolor="#FFFFFF"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#clippingPolygon%28%29" class="signatureLink">clippingPolygon</a>(points:Array, outline:Boolean = false):void</div><div class="summaryTableDescription"></div></td><td class="summaryTableOwnerCol">PDF</td></tr><tr class="" bgcolor="#F2F2F2"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#clippingRect%28%29" class="signatureLink">clippingRect</a>(x:Number, y:Number, width:Number, height:Number, outline:Boolean = false):void</div><div class="summaryTableDescription"></div></td><td class="summaryTableOwnerCol">PDF</td></tr><tr class="" bgcolor="#FFFFFF"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#clippingRoundedRect%28%29" class="signatureLink">clippingRoundedRect</a>(x:Number, y:Number, width:Number, height:Number, radius:Number, outline:Boolean = false):void</div><div class="summaryTableDescription"></div></td><td class="summaryTableOwnerCol">PDF</td></tr><tr class="" bgcolor="#F2F2F2"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#clippingText%28%29" class="signatureLink">clippingText</a>(x:Number, y:Number, text:String, outline:Boolean = false):void</div><div class="summaryTableDescription"></div></td><td class="summaryTableOwnerCol">PDF</td></tr><tr class="" bgcolor="#FFFFFF"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#curveTo%28%29" class="signatureLink">curveTo</a>(controlX1:Number, controlY1:Number, controlX2:Number, controlY2:Number, finalX3:Number, finalY3:Number):void</div><div class="summaryTableDescription">
		 The curveTo method draws a cubic bezier curve.</div></td><td class="summaryTableOwnerCol">PDF</td></tr><tr class="" bgcolor="#F2F2F2"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#dispatchEvent%28%29" class="signatureLink">dispatchEvent</a>(event:Event):Boolean</div><div class="summaryTableDescription"></div></td><td class="summaryTableOwnerCol">PDF</td></tr><tr class="" bgcolor="#FFFFFF"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#drawCircle%28%29" class="signatureLink">drawCircle</a>(x:Number, y:Number, radius:Number):void</div><div class="summaryTableDescription">
		 The drawCircle method draws a circle.</div></td><td class="summaryTableOwnerCol">PDF</td></tr><tr class="" bgcolor="#F2F2F2"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#drawEllipse%28%29" class="signatureLink">drawEllipse</a>(x:Number, y:Number, radiusX:Number, radiusY:Number):void</div><div class="summaryTableDescription">
		 The drawEllipse method draws an ellipse.</div></td><td class="summaryTableOwnerCol">PDF</td></tr><tr class="" bgcolor="#FFFFFF"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#drawLine%28%29" class="signatureLink">drawLine</a>(x1:Number, y1:Number, x2:Number, y2:Number):void</div><div class="summaryTableDescription">
		 
		 
		 
		 </div></td><td class="summaryTableOwnerCol">PDF</td></tr><tr class="" bgcolor="#F2F2F2"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#drawPolygone%28%29" class="signatureLink">drawPolygone</a>(points:Array):void</div><div class="summaryTableDescription">
		 The drawPolygone method draws a polygone.</div></td><td class="summaryTableOwnerCol">PDF</td></tr><tr class="" bgcolor="#FFFFFF"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#drawRect%28%29" class="signatureLink">drawRect</a>(rect:Rectangle):void</div><div class="summaryTableDescription">
		 The drawRect method draws a rectangle shape.</div></td><td class="summaryTableOwnerCol">PDF</td></tr><tr class="" bgcolor="#F2F2F2"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#drawRoundRect%28%29" class="signatureLink">drawRoundRect</a>(rect:Rectangle, ellipseWidth:Number):void</div><div class="summaryTableDescription">
		 The drawRoundedRect method draws a rounded rectangle shape.</div></td><td class="summaryTableOwnerCol">PDF</td></tr><tr class="" bgcolor="#FFFFFF"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#drawRoundRectComplex%28%29" class="signatureLink">drawRoundRectComplex</a>(rect:Rectangle,
 topLeftEllipseWidth:Number, topRightEllipseWidth:Number, 
bottomLeftEllipseWidth:Number, bottomRightEllipseWidth:Number):void</div><div class="summaryTableDescription">
		 The drawComplexRoundRect method draws a rounded rectangle shape.</div></td><td class="summaryTableOwnerCol">PDF</td></tr><tr class="" bgcolor="#F2F2F2"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#drawSector%28%29" class="signatureLink">drawSector</a>(xCenter:Number,
 yCenter:Number, radius:Number, a:Number, b:Number, style:String = FD, 
clockWise:Boolean = true, angleOrigin:Number = 90):void</div><div class="summaryTableDescription">
		 The drawSector method draws a sector, which allows you to draw a pie chart.</div></td><td class="summaryTableOwnerCol">PDF</td></tr><tr class="" bgcolor="#FFFFFF"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#end%28%29" class="signatureLink">end</a>(closePath:Boolean = true):void</div><div class="summaryTableDescription">
		 The end method closes the stroke.</div></td><td class="summaryTableOwnerCol">PDF</td></tr><tr class="" bgcolor="#F2F2F2"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#endFill%28%29" class="signatureLink">endFill</a>():void</div><div class="summaryTableDescription">
		 Ends all previous filling.</div></td><td class="summaryTableOwnerCol">PDF</td></tr><tr class="" bgcolor="#FFFFFF"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#footer%28%29" class="signatureLink">footer</a>(footerText:String, showPageNumber:Boolean = false, position:String = left):void</div><div class="summaryTableDescription"></div></td><td class="summaryTableOwnerCol">PDF</td></tr><tr class="" bgcolor="#F2F2F2"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#getCurrentInternalLink%28%29" class="signatureLink">getCurrentInternalLink</a>():<a href="http://alivepdf.bytearray.org/alivepdf-asdoc/org/alivepdf/links/InternalLink.html">InternalLink</a></div><div class="summaryTableDescription">
		 Returns an InternalLink object linked to the current page at the current Y in the page.</div></td><td class="summaryTableOwnerCol">PDF</td></tr><tr class="" bgcolor="#FFFFFF"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#getCurrentPage%28%29" class="signatureLink">getCurrentPage</a>():<a href="http://alivepdf.bytearray.org/alivepdf-asdoc/org/alivepdf/pages/Page.html">Page</a></div><div class="summaryTableDescription">
		 Lets you retrieve the current Page.</div></td><td class="summaryTableOwnerCol">PDF</td></tr><tr class="" bgcolor="#F2F2F2"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#getDefaultOrientation%28%29" class="signatureLink">getDefaultOrientation</a>():String</div><div class="summaryTableDescription">
		 Returns the default PDF orientation.</div></td><td class="summaryTableOwnerCol">PDF</td></tr><tr class="" bgcolor="#FFFFFF"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#getDefaultSize%28%29" class="signatureLink">getDefaultSize</a>():<a href="http://alivepdf.bytearray.org/alivepdf-asdoc/org/alivepdf/layout/Size.html">Size</a></div><div class="summaryTableDescription">
		 Returns the default PDF Size.</div></td><td class="summaryTableOwnerCol">PDF</td></tr><tr class="" bgcolor="#F2F2F2"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#getDefaultUnit%28%29" class="signatureLink">getDefaultUnit</a>():String</div><div class="summaryTableDescription">
		 Returns the default PDF unit unit.</div></td><td class="summaryTableOwnerCol">PDF</td></tr><tr class="" bgcolor="#FFFFFF"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#getFonts%28%29" class="signatureLink">getFonts</a>():Array</div><div class="summaryTableDescription">
		 Lets you retrieve the fonts used in the PDF document.</div></td><td class="summaryTableOwnerCol">PDF</td></tr><tr class="" bgcolor="#F2F2F2"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#getMargins%28%29" class="signatureLink">getMargins</a>():Rectangle</div><div class="summaryTableDescription">
		 Lets you retrieve the margins dimensions.</div></td><td class="summaryTableOwnerCol">PDF</td></tr><tr class="" bgcolor="#FFFFFF"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#getPage%28%29" class="signatureLink">getPage</a>(index:int):<a href="http://alivepdf.bytearray.org/alivepdf-asdoc/org/alivepdf/pages/Page.html">Page</a></div><div class="summaryTableDescription">
		 Lets you retrieve a Page object.</div></td><td class="summaryTableOwnerCol">PDF</td></tr><tr class="" bgcolor="#F2F2F2"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#getPages%28%29" class="signatureLink">getPages</a>():Array</div><div class="summaryTableDescription">
		 Lets you retrieve all the PDF pages.</div></td><td class="summaryTableOwnerCol">PDF</td></tr><tr class="" bgcolor="#FFFFFF"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#getX%28%29" class="signatureLink">getX</a>():Number</div><div class="summaryTableDescription">
		 Lets you retrieve the X position for the current page.</div></td><td class="summaryTableOwnerCol">PDF</td></tr><tr class="" bgcolor="#F2F2F2"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#getY%28%29" class="signatureLink">getY</a>():Number</div><div class="summaryTableDescription">
		 Lets you retrieve the Y position for the current page.</div></td><td class="summaryTableOwnerCol">PDF</td></tr><tr class="" bgcolor="#FFFFFF"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#gotoPage%28%29" class="signatureLink">gotoPage</a>(index:int):void</div><div class="summaryTableDescription">
		 Lets you move to a Page in the PDF.</div></td><td class="summaryTableOwnerCol">PDF</td></tr><tr class="" bgcolor="#F2F2F2"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#hasEventListener%28%29" class="signatureLink">hasEventListener</a>(type:String):Boolean</div><div class="summaryTableDescription"></div></td><td class="summaryTableOwnerCol">PDF</td></tr><tr class="" bgcolor="#FFFFFF"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#header%28%29" class="signatureLink">header</a>(headerText:String):void</div><div class="summaryTableDescription"></div></td><td class="summaryTableOwnerCol">PDF</td></tr><tr class="" bgcolor="#F2F2F2"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#linearGradient%28%29" class="signatureLink">linearGradient</a>(x:Number, y:Number, width:Number, height:Number, col1:Array, col2:Array, coordinates:Array):void</div><div class="summaryTableDescription"></div></td><td class="summaryTableOwnerCol">PDF</td></tr><tr class="" bgcolor="#FFFFFF"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#lineStyle%28%29" class="signatureLink">lineStyle</a>(color:<a href="http://alivepdf.bytearray.org/alivepdf-asdoc/org/alivepdf/colors/IColor.html">IColor</a>, thickness:Number = 1, flatness:Number = 0, alpha:Number = 1, rule:String = NonZeroWinding, blendMode:String = Normal, style:<a href="http://alivepdf.bytearray.org/alivepdf-asdoc/org/alivepdf/drawing/DashedLine.html">DashedLine</a> = null, caps:String = null, joints:String = null, miterLimit:Number = 3):void</div><div class="summaryTableDescription">
		 Sets the stroke style.</div></td><td class="summaryTableOwnerCol">PDF</td></tr><tr class="" bgcolor="#F2F2F2"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#lineTo%28%29" class="signatureLink">lineTo</a>(x:Number, y:Number):void</div><div class="summaryTableDescription">
		 Lets you draw a stroke from the current point to the new point.</div></td><td class="summaryTableOwnerCol">PDF</td></tr><tr class="" bgcolor="#FFFFFF"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#moveTo%28%29" class="signatureLink">moveTo</a>(x:Number, y:Number):void</div><div class="summaryTableDescription">
		 Lets you move the current drawing point to the specified destination.</div></td><td class="summaryTableOwnerCol">PDF</td></tr><tr class="" bgcolor="#F2F2F2"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#newLine%28%29" class="signatureLink">newLine</a>(height:*):void</div><div class="summaryTableDescription">
		 Lets you insert a line break for text.</div></td><td class="summaryTableOwnerCol">PDF</td></tr><tr class="" bgcolor="#FFFFFF"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#radialGradient%28%29" class="signatureLink">radialGradient</a>(x:Number, y:Number, width:Number, height:Number, col1:Array, col2:Array, coordinates:Array):void</div><div class="summaryTableDescription"></div></td><td class="summaryTableOwnerCol">PDF</td></tr><tr class="" bgcolor="#F2F2F2"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#removeAllPages%28%29" class="signatureLink">removeAllPages</a>():void</div><div class="summaryTableDescription">
		 Lets you remove all the pages from the PDF.</div></td><td class="summaryTableOwnerCol">PDF</td></tr><tr class="" bgcolor="#FFFFFF"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#removeEventListener%28%29" class="signatureLink">removeEventListener</a>(type:String, listener:Function, useCapture:Boolean = false):void</div><div class="summaryTableDescription"></div></td><td class="summaryTableOwnerCol">PDF</td></tr><tr class="" bgcolor="#F2F2F2"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#removeFont%28%29" class="signatureLink">removeFont</a>(font:<a href="http://alivepdf.bytearray.org/alivepdf-asdoc/org/alivepdf/fonts/IFont.html">IFont</a>):void</div><div class="summaryTableDescription">
		 Lets you remove an embedded font from the PDF.</div></td><td class="summaryTableOwnerCol">PDF</td></tr><tr class="" bgcolor="#FFFFFF"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#removePage%28%29" class="signatureLink">removePage</a>(index:int):<a href="http://alivepdf.bytearray.org/alivepdf-asdoc/org/alivepdf/pages/Page.html">Page</a></div><div class="summaryTableDescription">
		 Lets you remove a Page from the PDF.</div></td><td class="summaryTableOwnerCol">PDF</td></tr><tr class="" bgcolor="#F2F2F2"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#resetMargins%28%29" class="signatureLink">resetMargins</a>():void</div><div class="summaryTableDescription">
		 Lets you reset the margins dimensions.</div></td><td class="summaryTableOwnerCol">PDF</td></tr><tr class="" bgcolor="#FFFFFF"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#rotate%28%29" class="signatureLink">rotate</a>(angle:Number, x:Number = -1, y:Number = -1):void</div><div class="summaryTableDescription">
		 Allows you to rotate any content drawn after the rotate() call  
		 </div></td><td class="summaryTableOwnerCol">PDF</td></tr><tr class="" bgcolor="#F2F2F2"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#rotatePage%28%29" class="signatureLink">rotatePage</a>(number:int, rotation:Number):void</div><div class="summaryTableDescription">
		 Lets you rotate a specific page (between 1 and n-1).</div></td><td class="summaryTableOwnerCol">PDF</td></tr><tr class="" bgcolor="#FFFFFF"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#save%28%29" class="signatureLink">save</a>(method:String, url:String, downloadMethod:String = inline, fileName:String = generated.pdf, frame:String = _blank):*</div><div class="summaryTableDescription">
		 Allows you to save the PDF locally (Flash Player 10 minmum required) or remotely through a server-side script.</div></td><td class="summaryTableOwnerCol">PDF</td></tr><tr class="" bgcolor="#F2F2F2"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#setAdvanceTiming%28%29" class="signatureLink">setAdvanceTiming</a>(timing:int):void</div><div class="summaryTableDescription">
		 Lets you set specify the timing (in seconds) a page is shown when the PDF is shown in fullscreen mode.</div></td><td class="summaryTableOwnerCol">PDF</td></tr><tr class="" bgcolor="#FFFFFF"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#setAliasNbPages%28%29" class="signatureLink">setAliasNbPages</a>(alias:String = {nb}):void</div><div class="summaryTableDescription">
		 Lets you specify an alias for the total number of pages.</div></td><td class="summaryTableOwnerCol">PDF</td></tr><tr class="" bgcolor="#F2F2F2"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#setAlpha%28%29" class="signatureLink">setAlpha</a>(alpha:Number, blendMode:String = Normal):void</div><div class="summaryTableDescription">
		 Lets you specify the opacity for the next drawing operations, from 0 (100% transparent) to 1 (100% opaque).</div></td><td class="summaryTableOwnerCol">PDF</td></tr><tr class="" bgcolor="#FFFFFF"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#setAuthor%28%29" class="signatureLink">setAuthor</a>(author:String):void</div><div class="summaryTableDescription">
		 Sets the specified author for the PDF.</div></td><td class="summaryTableOwnerCol">PDF</td></tr><tr class="" bgcolor="#F2F2F2"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#setAutoPageBreak%28%29" class="signatureLink">setAutoPageBreak</a>(auto:Boolean, margin:Number):void</div><div class="summaryTableDescription">
		 Lets you enable or disable auto page break mode and triggering margin.</div></td><td class="summaryTableOwnerCol">PDF</td></tr><tr class="" bgcolor="#FFFFFF"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#setBottomMargin%28%29" class="signatureLink">setBottomMargin</a>(margin:Number):void</div><div class="summaryTableDescription">
		 Lets you specify the bottom margin
		 		 </div></td><td class="summaryTableOwnerCol">PDF</td></tr><tr class="" bgcolor="#F2F2F2"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#setCreator%28%29" class="signatureLink">setCreator</a>(creator:String):void</div><div class="summaryTableDescription">
		 Sets the specified creator for the PDF.</div></td><td class="summaryTableOwnerCol">PDF</td></tr><tr class="" bgcolor="#FFFFFF"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#setDisplayMode%28%29" class="signatureLink">setDisplayMode</a>(zoom:String = FullWidth, layout:String = SinglePage, mode:String = UseNone, zoomValue:Number = 1):void</div><div class="summaryTableDescription">
		 Lets you set a specific display mode, the DisplayMode takes care of the general layout of the PDF in the PDF reader
		 		 </div></td><td class="summaryTableOwnerCol">PDF</td></tr><tr class="" bgcolor="#F2F2F2"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#setFont%28%29" class="signatureLink">setFont</a>(font:<a href="http://alivepdf.bytearray.org/alivepdf-asdoc/org/alivepdf/fonts/IFont.html">IFont</a>, size:int = 12, underlined:Boolean = false):void</div><div class="summaryTableDescription">
		 Lets you set a specific font.</div></td><td class="summaryTableOwnerCol">PDF</td></tr><tr class="" bgcolor="#FFFFFF"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#setFontSize%28%29" class="signatureLink">setFontSize</a>(size:int):void</div><div class="summaryTableDescription">
		 Lets you set a new size for the current font.</div></td><td class="summaryTableOwnerCol">PDF</td></tr><tr class="" bgcolor="#F2F2F2"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#setGridPositionOnNextPages%28%29" class="signatureLink">setGridPositionOnNextPages</a>(xvalue:Number = 10, yvalue:Number = 10):void</div><div class="summaryTableDescription">
		 This method is used to add grid when used in auto mode for big chunck of data into other pages.</div></td><td class="summaryTableOwnerCol">PDF</td></tr><tr class="" bgcolor="#FFFFFF"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#setKeywords%28%29" class="signatureLink">setKeywords</a>(keywords:String):void</div><div class="summaryTableDescription">
		 Sets the specified keywords for the PDF.</div></td><td class="summaryTableOwnerCol">PDF</td></tr><tr class="" bgcolor="#F2F2F2"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#setLeftMargin%28%29" class="signatureLink">setLeftMargin</a>(margin:Number):void</div><div class="summaryTableDescription">
		 Lets you specify the left margin.</div></td><td class="summaryTableOwnerCol">PDF</td></tr><tr class="" bgcolor="#FFFFFF"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#setMargins%28%29" class="signatureLink">setMargins</a>(left:Number, top:Number, right:Number = -1, bottom:Number = 20):void</div><div class="summaryTableDescription">
		 Lets you specify the left, top, and right margins.</div></td><td class="summaryTableOwnerCol">PDF</td></tr><tr class="" bgcolor="#F2F2F2"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#setRightMargin%28%29" class="signatureLink">setRightMargin</a>(margin:Number):void</div><div class="summaryTableDescription">
		 Lets you specify the right margin.</div></td><td class="summaryTableOwnerCol">PDF</td></tr><tr class="" bgcolor="#FFFFFF"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#setStartingPage%28%29" class="signatureLink">setStartingPage</a>(index:int):void</div><div class="summaryTableDescription">
		 Lets you specify which page should be viewed by default when the document is opened.</div></td><td class="summaryTableOwnerCol">PDF</td></tr><tr class="" bgcolor="#F2F2F2"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#setSubject%28%29" class="signatureLink">setSubject</a>(subject:String):void</div><div class="summaryTableDescription">
		 Lets you set a subject for the PDF.</div></td><td class="summaryTableOwnerCol">PDF</td></tr><tr class="" bgcolor="#FFFFFF"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#setTitle%28%29" class="signatureLink">setTitle</a>(title:String):void</div><div class="summaryTableDescription">
		 Lets you set a title for the PDF.</div></td><td class="summaryTableOwnerCol">PDF</td></tr><tr class="" bgcolor="#F2F2F2"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#setTopMargin%28%29" class="signatureLink">setTopMargin</a>(margin:Number):void</div><div class="summaryTableDescription">
		 Lets you specify the top margin.</div></td><td class="summaryTableOwnerCol">PDF</td></tr><tr class="" bgcolor="#FFFFFF"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#setViewerPreferences%28%29" class="signatureLink">setViewerPreferences</a>(toolbar:String
 = false, menubar:String = false, windowUI:String = false, 
fitWindow:String = false, centeredWindow:String = false, 
displayTitle:String = false):void</div><div class="summaryTableDescription">
		 Lets you control the way the document is to be presented on the screen or in print.</div></td><td class="summaryTableOwnerCol">PDF</td></tr><tr class="" bgcolor="#F2F2F2"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#setVisible%28%29" class="signatureLink">setVisible</a>(visible:String):void</div><div class="summaryTableDescription"></div></td><td class="summaryTableOwnerCol">PDF</td></tr><tr class="" bgcolor="#FFFFFF"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#setX%28%29" class="signatureLink">setX</a>(x:Number):void</div><div class="summaryTableDescription">
		 Lets you specify the X position for the current page.</div></td><td class="summaryTableOwnerCol">PDF</td></tr><tr class="" bgcolor="#F2F2F2"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#setXY%28%29" class="signatureLink">setXY</a>(x:Number, y:Number):void</div><div class="summaryTableDescription">
		 Lets you specify the X and Y position for the current page.</div></td><td class="summaryTableOwnerCol">PDF</td></tr><tr class="" bgcolor="#FFFFFF"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#setY%28%29" class="signatureLink">setY</a>(y:Number):void</div><div class="summaryTableDescription">
		 Lets you specify the Y position for the current page.</div></td><td class="summaryTableOwnerCol">PDF</td></tr><tr class="" bgcolor="#F2F2F2"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#skew%28%29" class="signatureLink">skew</a>(ax:Number, ay:Number, x:Number = -1, y:Number = -1):void</div><div class="summaryTableDescription">
		 Allows you to skew any content drawn after the skew() call  
		 </div></td><td class="summaryTableOwnerCol">PDF</td></tr><tr class="" bgcolor="#FFFFFF"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#textStyle%28%29" class="signatureLink">textStyle</a>(color:<a href="http://alivepdf.bytearray.org/alivepdf-asdoc/org/alivepdf/colors/IColor.html">IColor</a>,
 alpha:Number = 1, rendering:int = 0, wordSpace:Number = 0, 
characterSpace:Number = 0, scale:Number = 100, leading:Number = 0):void</div><div class="summaryTableDescription">
		 Sets the text style with an appropriate color, alpha etc.</div></td><td class="summaryTableOwnerCol">PDF</td></tr><tr class="" bgcolor="#F2F2F2"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#toString%28%29" class="signatureLink">toString</a>():String</div><div class="summaryTableDescription"></div></td><td class="summaryTableOwnerCol">PDF</td></tr><tr class="" bgcolor="#FFFFFF"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#unsetClipping%28%29" class="signatureLink">unsetClipping</a>():void</div><div class="summaryTableDescription"></div></td><td class="summaryTableOwnerCol">PDF</td></tr><tr class="" bgcolor="#F2F2F2"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#willTrigger%28%29" class="signatureLink">willTrigger</a>(type:String):Boolean</div><div class="summaryTableDescription"></div></td><td class="summaryTableOwnerCol">PDF</td></tr><tr class="" bgcolor="#FFFFFF"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#writeFlashHtmlText%28%29" class="signatureLink">writeFlashHtmlText</a>(pHeight:Number, pText:String, pLink:<a href="http://alivepdf.bytearray.org/alivepdf-asdoc/org/alivepdf/links/ILink.html">ILink</a> = null):void</div><div class="summaryTableDescription">
		 Lets you write some text with basic HTML type formatting.</div></td><td class="summaryTableOwnerCol">PDF</td></tr><tr class="" bgcolor="#F2F2F2"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#writeText%28%29" class="signatureLink">writeText</a>(lineHeight:Number, text:String, link:<a href="http://alivepdf.bytearray.org/alivepdf-asdoc/org/alivepdf/links/ILink.html">ILink</a> = null):void</div><div class="summaryTableDescription">
		 Lets you write some text in the current page.</div></td><td class="summaryTableOwnerCol">PDF</td></tr></tbody></table></div><a name="eventSummary"></a><div class="summarySection"><div class="summaryTableTitle">Events</div><table class="summaryTable " id="summaryTableEvent" cellpadding="3" cellspacing="0"><tbody><tr><th>&nbsp;</th><th colspan="2">Event</th><th> Summary </th><th class="summaryTableOwnerCol">Defined By</th></tr><tr class="" bgcolor="#FFFFFF"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#event:added" class="signatureLink">added</a></div></td><td class="summaryTableDescription summaryTableCol">Dispatched when a page has been added to the PDF.</td><td class="summaryTableOwnerCol">PDF</td></tr><tr class="" bgcolor="#F2F2F2"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#event:complete" class="signatureLink">complete</a></div></td><td class="summaryTableDescription summaryTableCol">Dispatched when PDF has been generated and available.</td><td class="summaryTableOwnerCol">PDF</td></tr><tr class="" bgcolor="#FFFFFF"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#event:pageTree" class="signatureLink">pageTree</a></div></td><td class="summaryTableDescription summaryTableCol">Dispatched when the PDF page tree has been generated.</td><td class="summaryTableOwnerCol">PDF</td></tr><tr class="" bgcolor="#F2F2F2"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#event:resources" class="signatureLink">resources</a></div></td><td class="summaryTableDescription summaryTableCol">Dispatched when the required resources (fonts, images, etc.) haven been written into the PDF.</td><td class="summaryTableOwnerCol">PDF</td></tr><tr class="" bgcolor="#FFFFFF"><td class="summaryTablePaddingCol">&nbsp;</td><td class="summaryTableInheritanceCol">&nbsp;</td><td class="summaryTableSignatureCol"><div class="summarySignature"><a href="#event:started" class="signatureLink">started</a></div></td><td class="summaryTableDescription summaryTableCol">Dispatched when the PDF generation has been initiated.</td><td class="summaryTableOwnerCol">PDF</td></tr></tbody></table></div><script language="javascript" type="text/javascript"><!--
										showHideInherited();
										--></script><div class="MainContent"><div class="detailSectionHeader">Property Detail</div><a name="propertyDetail"></a><a name="totalFonts"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="detailHeaderName">totalFonts</td><td class="detailHeaderType">property</td></tr></tbody></table><div class="detailBody"><code>totalFonts:int</code>&nbsp;&nbsp;[read-only] <p></p><p></p><p>
		 Lets you retrieve the total number of fonts used in the PDF document.
		 		 </p><br><span class="label"> Implementation </span><br><code>&nbsp;&nbsp;&nbsp;&nbsp;public function get totalFonts():int</code><br><br><span class="label"> Example </span><br>This example shows how to retrieve the number of fonts used in the PDF document :
		 
		 </div><a name="propertyDetail"></a><a name="totalPages"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="detailHeaderName">totalPages</td><td class="detailHeaderType">property</td><td class="detailHeaderRule">&nbsp;</td></tr></tbody></table><div class="detailBody"><code>totalPages:int</code>&nbsp;&nbsp;[read-only] <p></p><p></p><p>
		 Lets you retrieve the number of pages in the PDF document.
		 		 </p><br><span class="label"> Implementation </span><br><code>&nbsp;&nbsp;&nbsp;&nbsp;public function get totalPages():int</code><br><br><span class="label"> Example </span><br>This example shows how to retrieve the number of pages :
		 
		 </div><a name="constructorDetail"></a><div class="detailSectionHeader">Constructor Detail</div><a name="PDF()"></a><a name="PDF(String,String,Boolean,org.alivepdf.layout.Size,int)"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="detailHeaderName">PDF</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">Constructor</td></tr></tbody></table><div class="detailBody"><code>public function PDF(orientation:String = Portrait, unit:String = Mm, autoPageBreak:Boolean = true, pageSize:<a href="http://alivepdf.bytearray.org/alivepdf-asdoc/org/alivepdf/layout/Size.html">Size</a> = null, rotation:int = 0)</code><p></p><p>
		 The PDF class represents a PDF document.
		 		 </p><span class="label"> Parameters </span><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td width="20px"></td><td><code><span class="label">orientation</span>:String</code> (default = <code>Portrait</code>)<code></code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">unit</span>:String</code> (default = <code>Mm</code>)<code></code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">autoPageBreak</span>:Boolean</code> (default = <code>true</code>)<code></code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">pageSize</span>:<a href="http://alivepdf.bytearray.org/alivepdf-asdoc/org/alivepdf/layout/Size.html">Size</a></code> (default = <code>null</code>)<code></code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">rotation</span>:int</code> (default = <code>0</code>)<code></code></td></tr></tbody></table><br><span class="label"> Example </span><br>This example shows how to create a valid PDF document :
		 
		 </div><a name="methodDetail"></a><div class="detailSectionHeader">Method Detail</div><a name="addAnnotation()"></a><a name="addAnnotation(org.alivepdf.annotations.Annotation)"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="detailHeaderName">addAnnotation</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td></tr></tbody></table><div class="detailBody"><code> public function addAnnotation(annotation:<a href="http://alivepdf.bytearray.org/alivepdf-asdoc/org/alivepdf/annotations/Annotation.html">Annotation</a>):void</code><p></p><p></p><p>
		 Lets you add an annotation to the current page
		 </p><p><span class="label"> Parameters </span></p><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td width="20px"></td><td><code><span class="label">annotation</span>:<a href="http://alivepdf.bytearray.org/alivepdf-asdoc/org/alivepdf/annotations/Annotation.html">Annotation</a></code> — 	 
		 This example shows how to add an annotation for the current page :
		 
		 </td></tr></tbody></table><p></p></div><a name="addBookmark()"></a><a name="addBookmark(String,int,Number,org.alivepdf.colors.RGBColor)"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="detailHeaderName">addBookmark</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></tbody></table><div class="detailBody"><code> public function addBookmark(text:String, level:int = 0, y:Number = -1, color:<a href="http://alivepdf.bytearray.org/alivepdf-asdoc/org/alivepdf/colors/RGBColor.html">RGBColor</a> = null):void</code><p></p><p></p><p>
		 Lets you add a bookmark.
		 Note : Multiple calls will create a nice table.
		 		 </p><p><span class="label"> Parameters </span></p><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td width="20px"></td><td><code><span class="label">text</span>:String</code> — Text appearing in the outline panel
		 </td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">level</span>:int</code> (default = <code>0</code>)<code></code> — Specify the bookmark's level
		 </td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">y</span>:Number</code> (default = <code>-1</code>)<code></code> — Position in the current page to go
		 </td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">color</span>:<a href="http://alivepdf.bytearray.org/alivepdf-asdoc/org/alivepdf/colors/RGBColor.html">RGBColor</a></code> (default = <code>null</code>)<code></code> — RGBColor object
		 </td></tr></tbody></table><p></p><br><span class="label"> Example </span><br>This example shows how to add a bookmark for the current page just added :
		 
		 
		 This example shows how to add a bookmark with a specific color (red) for the current page just added :
		 
		 
		 You can also add sublevel bookmarks with the following code, using the level parameter :
		 
		 </div><a name="addCell()"></a><a name="addCell(Number,Number,String,any,Number,String,Number,org.alivepdf.links.ILink)"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="detailHeaderName">addCell</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></tbody></table><div class="detailBody"><code>
 public function addCell(width:Number = 0, height:Number = 0, 
text:String, border:* = 0, ln:Number = 0, align:String, fill:Number = 0,
 link:<a href="http://alivepdf.bytearray.org/alivepdf-asdoc/org/alivepdf/links/ILink.html">ILink</a> = null):void</code><p></p><p></p><p>
		 Add a cell with some text to the current page.
		 		 </p><p><span class="label"> Parameters </span></p><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td width="20px"></td><td><code><span class="label">width</span>:Number</code> (default = <code>0</code>)<code></code> — Cell width
		 </td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">height</span>:Number</code> (default = <code>0</code>)<code></code> — Cell height
		 </td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">text</span>:String</code> — Text to add into the cell
		 </td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">border</span>:*</code> (default = <code>0</code>)<code></code> — Sets the new position after cell is drawn, default value is 0
		 </td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">ln</span>:Number</code> (default = <code>0</code>)<code></code> — Lets you center or align the text into the cell
		 </td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">align</span>:String</code> — Lets you specify if the cell is colored (1) or transparent (0)
		 </td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">fill</span>:Number</code> (default = <code>0</code>)<code></code> — Link can be internal to do document level navigation (InternalLink) or external (HTTPLink)
		 </td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">link</span>:<a href="http://alivepdf.bytearray.org/alivepdf-asdoc/org/alivepdf/links/ILink.html">ILink</a></code> (default = <code>null</code>)<code></code></td></tr></tbody></table><p></p><br><span class="label"> Example </span><br>This example shows how to write some text within a cell :
		 
		 
		 This example shows how to write some clickable text within a cell :
		 
		 </div><a name="addCellFitScale()"></a><a name="addCellFitScale(Number,Number,String,any,Number,String,Number,org.alivepdf.links.ILink)"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="detailHeaderName">addCellFitScale</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></tbody></table><div class="detailBody"><code>
 public function addCellFitScale(width:Number, height:Number = 0, 
text:String, border:* = 0, ln:Number = 0, align:String, fill:Number = 0,
 link:<a href="http://alivepdf.bytearray.org/alivepdf-asdoc/org/alivepdf/links/ILink.html">ILink</a> = null):void</code><p></p><p></p><p>
		 Adds a cell with horizontal scaling only if necessary
		 </p><p><span class="label"> Parameters </span></p><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td width="20px"></td><td><code><span class="label">width</span>:Number</code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">height</span>:Number</code> (default = <code>0</code>)<code></code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">text</span>:String</code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">border</span>:*</code> (default = <code>0</code>)<code></code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">ln</span>:Number</code> (default = <code>0</code>)<code></code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">align</span>:String</code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">fill</span>:Number</code> (default = <code>0</code>)<code></code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">link</span>:<a href="http://alivepdf.bytearray.org/alivepdf-asdoc/org/alivepdf/links/ILink.html">ILink</a></code> (default = <code>null</code>)<code></code></td></tr></tbody></table><p></p></div><a name="addCellFitScaleForce()"></a><a name="addCellFitScaleForce(Number,Number,String,any,Number,String,Number,org.alivepdf.links.ILink)"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="detailHeaderName">addCellFitScaleForce</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></tbody></table><div class="detailBody"><code>
 public function addCellFitScaleForce(width:Number, height:Number = 0, 
text:String, border:* = 0, ln:Number = 0, align:String, fill:Number = 0,
 link:<a href="http://alivepdf.bytearray.org/alivepdf-asdoc/org/alivepdf/links/ILink.html">ILink</a> = null):void</code><p></p><p></p><p>
		 Adds a cell with horizontal scaling always
		 </p><p><span class="label"> Parameters </span></p><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td width="20px"></td><td><code><span class="label">width</span>:Number</code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">height</span>:Number</code> (default = <code>0</code>)<code></code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">text</span>:String</code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">border</span>:*</code> (default = <code>0</code>)<code></code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">ln</span>:Number</code> (default = <code>0</code>)<code></code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">align</span>:String</code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">fill</span>:Number</code> (default = <code>0</code>)<code></code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">link</span>:<a href="http://alivepdf.bytearray.org/alivepdf-asdoc/org/alivepdf/links/ILink.html">ILink</a></code> (default = <code>null</code>)<code></code></td></tr></tbody></table><p></p></div><a name="addCellFitSpace()"></a><a name="addCellFitSpace(Number,Number,String,any,Number,String,Number,org.alivepdf.links.ILink)"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="detailHeaderName">addCellFitSpace</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></tbody></table><div class="detailBody"><code>
 public function addCellFitSpace(width:Number, height:Number = 0, 
text:String, border:* = 0, ln:Number = 0, align:String, fill:Number = 0,
 link:<a href="http://alivepdf.bytearray.org/alivepdf-asdoc/org/alivepdf/links/ILink.html">ILink</a> = null):void</code><p></p><p></p><p>
		 Adds a cell with character spacing only if necessary
		 </p><p><span class="label"> Parameters </span></p><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td width="20px"></td><td><code><span class="label">width</span>:Number</code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">height</span>:Number</code> (default = <code>0</code>)<code></code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">text</span>:String</code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">border</span>:*</code> (default = <code>0</code>)<code></code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">ln</span>:Number</code> (default = <code>0</code>)<code></code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">align</span>:String</code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">fill</span>:Number</code> (default = <code>0</code>)<code></code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">link</span>:<a href="http://alivepdf.bytearray.org/alivepdf-asdoc/org/alivepdf/links/ILink.html">ILink</a></code> (default = <code>null</code>)<code></code></td></tr></tbody></table><p></p></div><a name="addCellFitSpaceForce()"></a><a name="addCellFitSpaceForce(Number,Number,String,any,Number,String,Number,org.alivepdf.links.ILink)"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="detailHeaderName">addCellFitSpaceForce</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></tbody></table><div class="detailBody"><code>
 public function addCellFitSpaceForce(width:Number, height:Number = 0, 
text:String, border:* = 0, ln:Number = 0, align:String, fill:Number = 0,
 link:<a href="http://alivepdf.bytearray.org/alivepdf-asdoc/org/alivepdf/links/ILink.html">ILink</a> = null):void</code><p></p><p></p><p>
		 Adds a cell with character spacing always
		 </p><p><span class="label"> Parameters </span></p><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td width="20px"></td><td><code><span class="label">width</span>:Number</code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">height</span>:Number</code> (default = <code>0</code>)<code></code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">text</span>:String</code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">border</span>:*</code> (default = <code>0</code>)<code></code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">ln</span>:Number</code> (default = <code>0</code>)<code></code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">align</span>:String</code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">fill</span>:Number</code> (default = <code>0</code>)<code></code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">link</span>:<a href="http://alivepdf.bytearray.org/alivepdf-asdoc/org/alivepdf/links/ILink.html">ILink</a></code> (default = <code>null</code>)<code></code></td></tr></tbody></table><p></p></div><a name="addCodaBar()"></a><a name="addCodaBar(org.alivepdf.codabar.CodaBar)"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="detailHeaderName">addCodaBar</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></tbody></table><div class="detailBody"><code> public function addCodaBar(codaBar:<a href="http://alivepdf.bytearray.org/alivepdf-asdoc/org/alivepdf/codabar/CodaBar.html">CodaBar</a>):void</code><p></p><p></p><p>
		 Allows you to add a CodaBar (Monarch) to the current page at any position.
		 </p><p><span class="label"> Parameters </span></p><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td width="20px"></td><td><code><span class="label">codaBar</span>:<a href="http://alivepdf.bytearray.org/alivepdf-asdoc/org/alivepdf/codabar/CodaBar.html">CodaBar</a></code> — 	 
		 This example shows how to add a CodaBar to the current page at position of 20, 20 :
		 
		 </td></tr></tbody></table><p></p></div><a name="addEPSImage()"></a><a name="addEPSImage(flash.utils.ByteArray,Number,Number,Number,Number,Boolean)"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="detailHeaderName">addEPSImage</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></tbody></table><div class="detailBody"><code>
 public function addEPSImage(stream:ByteArray, x:Number = 0, y:Number = 
0, w:Number = 0, h:Number = 0, useBoundingBox:Boolean = true):void</code><p></p><p></p><p>
		 The addEPSImage method takes an incoming EPS (.eps) file or Adobe® Illustrator® file (.ai) and render it on the current page.
		 Note : Only EPS below or equal to version 8 are handled.
		 
		 </p><p><span class="label"> Parameters </span></p><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td width="20px"></td><td><code><span class="label">stream</span>:ByteArray</code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">x</span>:Number</code> (default = <code>0</code>)<code></code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">y</span>:Number</code> (default = <code>0</code>)<code></code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">w</span>:Number</code> (default = <code>0</code>)<code></code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">h</span>:Number</code> (default = <code>0</code>)<code></code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">useBoundingBox</span>:Boolean</code> (default = <code>true</code>)<code></code></td></tr></tbody></table><p></p><br><span class="label"> Example </span><br>This example shows how to add an EPS file stream on the current page :
		 
		 </div><a name="addEventListener()"></a><a name="addEventListener(String,Function,Boolean,int,Boolean)"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="detailHeaderName">addEventListener</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></tbody></table><div class="detailBody"><code>
 public function addEventListener(type:String, listener:Function, 
useCapture:Boolean = false, priority:int = 0, useWeakReference:Boolean =
 false):void</code><p></p><p><span class="label"> Parameters </span></p><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td width="20px"></td><td><code><span class="label">type</span>:String</code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">listener</span>:Function</code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">useCapture</span>:Boolean</code> (default = <code>false</code>)<code></code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">priority</span>:int</code> (default = <code>0</code>)<code></code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">useWeakReference</span>:Boolean</code> (default = <code>false</code>)<code></code></td></tr></tbody></table><p></p></div><a name="addGrid()"></a><a name="addGrid(org.alivepdf.grid.Grid,Number,Number,Boolean)"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="detailHeaderName">addGrid</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></tbody></table><div class="detailBody"><code> public function addGrid(grid:<a href="http://alivepdf.bytearray.org/alivepdf-asdoc/org/alivepdf/grid/Grid.html">Grid</a>, x:Number = 0, y:Number = 0, repeatHeader:Boolean = true):void</code><p></p><p></p><p>
		 Adds a dynamic table to the current page. This can be useful if you 
need to render large amount of data coming from an existing DataGrid or 
any data collection.
		 
		 </p><p><span class="label"> Parameters </span></p><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td width="20px"></td><td><code><span class="label">grid</span>:<a href="http://alivepdf.bytearray.org/alivepdf-asdoc/org/alivepdf/grid/Grid.html">Grid</a></code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">x</span>:Number</code> (default = <code>0</code>)<code></code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">y</span>:Number</code> (default = <code>0</code>)<code></code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">repeatHeader</span>:Boolean</code> (default = <code>true</code>)<code></code> — 	 
		 This example shows how to add such a grid to the current page :
		 
		 </td></tr></tbody></table><p></p></div><a name="addImage()"></a><a name="addImage(flash.display.DisplayObject,org.alivepdf.layout.Resize,Number,Number,Number,Number,Number,Number,Boolean,String,Number,String,org.alivepdf.links.ILink)"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="detailHeaderName">addImage</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></tbody></table><div class="detailBody"><code> public function addImage(displayObject:DisplayObject, resizeMode:<a href="http://alivepdf.bytearray.org/alivepdf-asdoc/org/alivepdf/layout/Resize.html">Resize</a>
 = null, x:Number = 0, y:Number = 0, width:Number = 0, height:Number = 
0, rotation:Number = 0, alpha:Number = 1, keepTransformation:Boolean = 
true, imageFormat:String = PNG, quality:Number = 100, blendMode:String =
 Normal, link:<a href="http://alivepdf.bytearray.org/alivepdf-asdoc/org/alivepdf/links/ILink.html">ILink</a> = null):void</code><p></p><p></p><p>
		 The addImage method takes an incoming DisplayObject. A JPG or PNG 
(non-transparent) snapshot is done and included in the PDF document.
		 
		 </p><p><span class="label"> Parameters </span></p><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td width="20px"></td><td><code><span class="label">displayObject</span>:DisplayObject</code> — The DisplayObject to embed as a bitmap in the PDF
		 </td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">resizeMode</span>:<a href="http://alivepdf.bytearray.org/alivepdf-asdoc/org/alivepdf/layout/Resize.html">Resize</a></code> (default = <code>null</code>)<code></code> — A resizing behavior, like : new Resize ( Mode.FIT_TO_PAGE, Position.CENTERED ) to center the image in the page
		 </td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">x</span>:Number</code> (default = <code>0</code>)<code></code> — The x position
		 </td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">y</span>:Number</code> (default = <code>0</code>)<code></code> — The y position
		 </td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">width</span>:Number</code> (default = <code>0</code>)<code></code> — The width of the image
		 </td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">height</span>:Number</code> (default = <code>0</code>)<code></code> — The height of the image
		 </td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">rotation</span>:Number</code> (default = <code>0</code>)<code></code> — The rotation of the image
		 </td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">alpha</span>:Number</code> (default = <code>1</code>)<code></code> — The image alpha
		 </td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">keepTransformation</span>:Boolean</code> (default = <code>true</code>)<code></code> — Do you want the image current transformation (scaled, rotated) to be preserved
		 </td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">imageFormat</span>:String</code> (default = <code>PNG</code>)<code></code> — The compression to use for the image (PNG or JPG)
		 </td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">quality</span>:Number</code> (default = <code>100</code>)<code></code> — The compression quality if JPG is used
		 </td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">blendMode</span>:String</code> (default = <code>Normal</code>)<code></code> — The blend mode to use if multiple images are overlapping
		 </td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">link</span>:<a href="http://alivepdf.bytearray.org/alivepdf-asdoc/org/alivepdf/links/ILink.html">ILink</a></code> (default = <code>null</code>)<code></code> — The link to associate the image with when clicked
		 </td></tr></tbody></table><p></p><br><span class="label"> Example </span><br>This
 example shows how to add a 100% compression quality JPG image centerd 
on the page :
		 
		 
		 This example shows how to add a 100% compression quality JPG image 
with no resizing behavior positioned at 20, 20 on the page:
		 
		 
		 </div><a name="addImageStream()"></a><a name="addImageStream(flash.utils.ByteArray,String,org.alivepdf.layout.Resize,Number,Number,Number,Number,Number,Number,String,org.alivepdf.links.ILink)"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="detailHeaderName">addImageStream</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></tbody></table><div class="detailBody"><code> public function addImageStream(imageBytes:ByteArray, colorSpace:String, resizeMode:<a href="http://alivepdf.bytearray.org/alivepdf-asdoc/org/alivepdf/layout/Resize.html">Resize</a>
 = null, x:Number = 0, y:Number = 0, width:Number = 0, height:Number = 
0, rotation:Number = 0, alpha:Number = 1, blendMode:String = Normal, 
link:<a href="http://alivepdf.bytearray.org/alivepdf-asdoc/org/alivepdf/links/ILink.html">ILink</a> = null):void</code><p></p><p></p><p>
		 The addImageStream method takes an incoming image as a ByteArray. 
This method can be used to embed high-quality images (300 dpi) to the 
PDF.
		 You must specify the image color space, if you don't know, there is a
 lot of chance the color space will be ColorSpace.DEVICE_RGB.
		 
		 </p><p><span class="label"> Parameters </span></p><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td width="20px"></td><td><code><span class="label">imageBytes</span>:ByteArray</code> — The image stream (PNG, JPEG, GIF)
		 </td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">colorSpace</span>:String</code> — The image colorspace
		 </td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">resizeMode</span>:<a href="http://alivepdf.bytearray.org/alivepdf-asdoc/org/alivepdf/layout/Resize.html">Resize</a></code> (default = <code>null</code>)<code></code> — A resizing behavior, like : new Resize ( Mode.FIT_TO_PAGE, Position.CENTERED ) to center the image in the page
		 </td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">x</span>:Number</code> (default = <code>0</code>)<code></code> — The x position
		 </td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">y</span>:Number</code> (default = <code>0</code>)<code></code> — The y position
		 </td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">width</span>:Number</code> (default = <code>0</code>)<code></code> — The width of the image
		 </td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">height</span>:Number</code> (default = <code>0</code>)<code></code> — The height of the image
		 </td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">rotation</span>:Number</code> (default = <code>0</code>)<code></code> — The rotation of the image
		 </td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">alpha</span>:Number</code> (default = <code>1</code>)<code></code> — The image alpha
		 </td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">blendMode</span>:String</code> (default = <code>Normal</code>)<code></code> — The blend mode to use if multiple images are overlapping
		 </td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">link</span>:<a href="http://alivepdf.bytearray.org/alivepdf-asdoc/org/alivepdf/links/ILink.html">ILink</a></code> (default = <code>null</code>)<code></code> — Do you want the image current transformation (scaled, rotated) to be preserved
		 </td></tr></tbody></table><p></p><br><span class="label"> Example </span><br>This
 example shows how to add an RGB image as a ByteArray into the current 
page :
		 
		 
		 This example shows how to add a CMYK image as a ByteArray into the 
current page, the image will take the whole page :
		 
		 
		 This example shows how to add a CMYK image as a ByteArray into the 
current page, the image will take the whole page but white margins will 
be preserved :
		 
		 </div><a name="addJavaScript()"></a><a name="addJavaScript(String)"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="detailHeaderName">addJavaScript</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></tbody></table><div class="detailBody"><code> public function addJavaScript(script:String):void</code><p></p><p></p><p>
		 The addJavaScript allows you to inject JavaScript code to be executed when the PDF document is opened.
		 
		 </p><p><span class="label"> Parameters </span></p><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td width="20px"></td><td><code><span class="label">script</span>:String</code></td></tr></tbody></table><p></p><br><span class="label"> Example </span><br>This example shows how to open the print dialog when the PDF document is opened :
		 
		 </div><a name="addLink()"></a><a name="addLink(Number,Number,Number,Number,org.alivepdf.links.ILink,String)"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="detailHeaderName">addLink</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></tbody></table><div class="detailBody"><code> public function addLink(x:Number, y:Number, width:Number, height:Number, link:<a href="http://alivepdf.bytearray.org/alivepdf-asdoc/org/alivepdf/links/ILink.html">ILink</a>, highlight:String = I):void</code><p></p><p></p><p>
		 Lets you add clickable link to a specific position
		 Link can be internal (document level navigation) or external (HTTP).
		 		 </p><p><span class="label"> Parameters </span></p><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td width="20px"></td><td><code><span class="label">x</span>:Number</code> — Page Format, can be Size.A3, Size.A4, Size.A5, Size.LETTER or Size.LEGAL
		 </td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">y</span>:Number</code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">width</span>:Number</code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">height</span>:Number</code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">link</span>:<a href="http://alivepdf.bytearray.org/alivepdf-asdoc/org/alivepdf/links/ILink.html">ILink</a></code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">highlight</span>:String</code> (default = <code>I</code>)<code></code></td></tr></tbody></table><p></p><br><span class="label"> Example </span><br>This example shows how to add an invisible clickable HTTP link in the current page :
		 
		 
		 This example shows how to add an invisible clickable internal link (document level navigation) in the current page :
		 
		 
		 By default, the link highlight mode (when the mouse is pressed over the link) is inverted.
		 This example shows how change the visual state of the link when pressed :
		 
		 
		 To make the link invisible even when clicked, just pass Highlight.NONE as below :
		 
		 </div><a name="addMultiCell()"></a><a name="addMultiCell(Number,Number,String,any,String,int)"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="detailHeaderName">addMultiCell</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></tbody></table><div class="detailBody"><code> public function addMultiCell(width:Number, height:Number, text:String, border:* = 0, align:String = J, filled:int = 0):void</code><p></p><p></p><p>
		 Add a multicell with some text to the current page.
		 		 </p><p><span class="label"> Parameters </span></p><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td width="20px"></td><td><code><span class="label">width</span>:Number</code> — Cell width
		 </td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">height</span>:Number</code> — Cell height
		 </td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">text</span>:String</code> — Text to add into the cell
		 </td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">border</span>:*</code> (default = <code>0</code>)<code></code> — Lets you specify if a border should be drawn around the cell
		 </td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">align</span>:String</code> (default = <code>J</code>)<code></code>
 — Lets you center or align the text into the cell, values can be L 
(left align), C (centered), R (right align), J (justified) default value
		 </td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">filled</span>:int</code> (default = <code>0</code>)<code></code> — Lets you specify if the cell is colored (1) or transparent (0)
		 </td></tr></tbody></table><p></p><br><span class="label"> Example </span><br>This example shows how to write a table made of text cells :
		 
		 </div><a name="addPage()"></a><a name="addPage(org.alivepdf.pages.Page)"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="detailHeaderName">addPage</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></tbody></table><div class="detailBody"><code> public function addPage(page:<a href="http://alivepdf.bytearray.org/alivepdf-asdoc/org/alivepdf/pages/Page.html">Page</a> = null):<a href="http://alivepdf.bytearray.org/alivepdf-asdoc/org/alivepdf/pages/Page.html">Page</a></code><p></p><p></p><p>
		 Lets you add a page to the current PDF.
		  
		 </p><p><span class="label"> Parameters </span></p><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td width="20px"></td><td><code><span class="label">page</span>:<a href="http://alivepdf.bytearray.org/alivepdf-asdoc/org/alivepdf/pages/Page.html">Page</a></code> (default = <code>null</code>)<code></code></td></tr></tbody></table><p></p><p></p><span class="label">Returns</span><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td width="20"></td><td><code><a href="http://alivepdf.bytearray.org/alivepdf-asdoc/org/alivepdf/pages/Page.html">Page</a></code></td></tr></tbody></table><br><span class="label"> Example </span><br>
		 This example shows how to add an A4 page with a landscape orientation :
		 
		 This example shows how to add a page with a custom size :
		 
		 
		 </div><a name="addText()"></a><a name="addText(String,Number,Number)"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="detailHeaderName">addText</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></tbody></table><div class="detailBody"><code> public function addText(text:String, x:Number = 0, y:Number = 0):void</code><p></p><p></p><p>
		 Lets you set some text to any position on the page.
		 Note : addText is a low level method which does not handle line 
returns and paragraph requirements. Use writeText for that or 
writeFlashHtmlText if you need HTML on top of that.
		 		 </p><p><span class="label"> Parameters </span></p><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td width="20px"></td><td><code><span class="label">text</span>:String</code> — The text to add
		 </td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">x</span>:Number</code> (default = <code>0</code>)<code></code> — X position
		 </td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">y</span>:Number</code> (default = <code>0</code>)<code></code> — Y position
		 </td></tr></tbody></table><p></p><br><span class="label"> Example </span><br>This example shows how to set some text to a specific place :
		 
		 </div><a name="addTransition()"></a><a name="addTransition(String,Number,String,String,int)"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="detailHeaderName">addTransition</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></tbody></table><div class="detailBody"><code>
 public function addTransition(style:String = R, duration:Number = 1, 
dimension:String = H, motionDirection:String = I, 
transitionDirection:int = 0):void</code><p></p><p></p><p>
		 Lets you add a transition between each PDF page
		 Note : PDF must be shown in fullscreen to see the transitions, use 
the setDisplayMode method with the PageMode.FULL_SCREEN parameter.
		 
		 </p><p><span class="label"> Parameters </span></p><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td width="20px"></td><td><code><span class="label">style</span>:String</code> (default = <code>R</code>)<code></code> — Transition style, can be Transition.SPLIT, Transition.BLINDS, BLINDS.BOX, Transition.WIPE, etc.
		 </td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">duration</span>:Number</code> (default = <code>1</code>)<code></code> — The transition duration
		 </td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">dimension</span>:String</code> (default = <code>H</code>)<code></code> — The dimension in which the the specified transition effect occurs
		 </td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">motionDirection</span>:String</code> (default = <code>I</code>)<code></code> — The motion's direction for the specified transition effect
		 </td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">transitionDirection</span>:int</code> (default = <code>0</code>)<code></code> — The direction in which the specified transition effect moves
		 </td></tr></tbody></table><p></p><br><span class="label"> Example </span><br>This example shows how to add a 4 seconds "Wipe" transition between the first and second page :
		 
		 </div><a name="beginBitmapFill()"></a><a name="beginBitmapFill(flash.display.BitmapData,flash.geom.Matrix)"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="detailHeaderName">beginBitmapFill</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></tbody></table><div class="detailBody"><code> public function beginBitmapFill(bitmap:BitmapData, matrix:Matrix = null):void</code><p></p><p></p><p>
		 The beginBitmapFill method fills a surface with a bitmap as a texture.
		 
		 </p><p><span class="label"> Parameters </span></p><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td width="20px"></td><td><code><span class="label">bitmap</span>:BitmapData</code> — A flash.display.BitmapData object
		 </td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">matrix</span>:Matrix</code> (default = <code>null</code>)<code></code> — A flash.geom.Matrix object
		 
		 </td></tr></tbody></table><p></p><br><span class="label"> Example </span><br>This example shows how to create a 10000 rectangle filled with a bitmap texture :
		 
		 
		 </div><a name="beginFill()"></a><a name="beginFill(org.alivepdf.colors.IColor,Number)"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="detailHeaderName">beginFill</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></tbody></table><div class="detailBody"><code> public function beginFill(color:<a href="http://alivepdf.bytearray.org/alivepdf-asdoc/org/alivepdf/colors/IColor.html">IColor</a>, tint:Number = 100):void</code><p></p><p></p><p>
		 Sets the filling color for different color spaces CMYK, RGB or DEVICEGRAY.
		 		 </p><p><span class="label"> Parameters </span></p><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td width="20px"></td><td><code><span class="label">color</span>:<a href="http://alivepdf.bytearray.org/alivepdf-asdoc/org/alivepdf/colors/IColor.html">IColor</a></code> — Color object, can be CMYKColor, GrayColor, or RGBColor
		 </td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">tint</span>:Number</code> (default = <code>100</code>)<code></code></td></tr></tbody></table><p></p><br><span class="label"> Example </span><br>This example shows how to create a red rectangle in the current page :
		 
		 </div><a name="clip()"></a><a name="clip(Number,Number,Number,Number)"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="detailHeaderName">clip</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></tbody></table><div class="detailBody"><code> public function clip(x:Number, y:Number, width:Number, height:Number):void</code><p></p><p><span class="label"> Parameters </span></p><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td width="20px"></td><td><code><span class="label">x</span>:Number</code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">y</span>:Number</code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">width</span>:Number</code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">height</span>:Number</code></td></tr></tbody></table><p></p></div><a name="clippedCell()"></a><a name="clippedCell(Number,Number,String,any,Number,String,Number,org.alivepdf.links.ILink)"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="detailHeaderName">clippedCell</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></tbody></table><div class="detailBody"><code>
 public function clippedCell(width:Number, height:Number = 0, 
text:String, border:* = 0, ln:Number = 0, align:String, fill:Number = 0,
 link:<a href="http://alivepdf.bytearray.org/alivepdf-asdoc/org/alivepdf/links/ILink.html">ILink</a> = null):void</code><p></p><p><span class="label"> Parameters </span></p><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td width="20px"></td><td><code><span class="label">width</span>:Number</code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">height</span>:Number</code> (default = <code>0</code>)<code></code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">text</span>:String</code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">border</span>:*</code> (default = <code>0</code>)<code></code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">ln</span>:Number</code> (default = <code>0</code>)<code></code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">align</span>:String</code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">fill</span>:Number</code> (default = <code>0</code>)<code></code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">link</span>:<a href="http://alivepdf.bytearray.org/alivepdf-asdoc/org/alivepdf/links/ILink.html">ILink</a></code> (default = <code>null</code>)<code></code></td></tr></tbody></table><p></p></div><a name="clippingCircle()"></a><a name="clippingCircle(Number,Number,Number,Boolean)"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="detailHeaderName">clippingCircle</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></tbody></table><div class="detailBody"><code> public function clippingCircle(x:Number, y:Number, radius:Number, outline:Boolean = false):void</code><p></p><p><span class="label"> Parameters </span></p><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td width="20px"></td><td><code><span class="label">x</span>:Number</code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">y</span>:Number</code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">radius</span>:Number</code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">outline</span>:Boolean</code> (default = <code>false</code>)<code></code></td></tr></tbody></table><p></p></div><a name="clippingEllipse()"></a><a name="clippingEllipse(Number,Number,Number,Number,Boolean)"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="detailHeaderName">clippingEllipse</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></tbody></table><div class="detailBody"><code> public function clippingEllipse(x:Number, y:Number, ty:Number, ry:Number, outline:Boolean = false):void</code><p></p><p><span class="label"> Parameters </span></p><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td width="20px"></td><td><code><span class="label">x</span>:Number</code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">y</span>:Number</code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">ty</span>:Number</code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">ry</span>:Number</code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">outline</span>:Boolean</code> (default = <code>false</code>)<code></code></td></tr></tbody></table><p></p></div><a name="clippingPolygon()"></a><a name="clippingPolygon(Array,Boolean)"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="detailHeaderName">clippingPolygon</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></tbody></table><div class="detailBody"><code> public function clippingPolygon(points:Array, outline:Boolean = false):void</code><p></p><p><span class="label"> Parameters </span></p><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td width="20px"></td><td><code><span class="label">points</span>:Array</code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">outline</span>:Boolean</code> (default = <code>false</code>)<code></code></td></tr></tbody></table><p></p></div><a name="clippingRect()"></a><a name="clippingRect(Number,Number,Number,Number,Boolean)"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="detailHeaderName">clippingRect</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></tbody></table><div class="detailBody"><code> public function clippingRect(x:Number, y:Number, width:Number, height:Number, outline:Boolean = false):void</code><p></p><p><span class="label"> Parameters </span></p><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td width="20px"></td><td><code><span class="label">x</span>:Number</code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">y</span>:Number</code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">width</span>:Number</code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">height</span>:Number</code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">outline</span>:Boolean</code> (default = <code>false</code>)<code></code></td></tr></tbody></table><p></p></div><a name="clippingRoundedRect()"></a><a name="clippingRoundedRect(Number,Number,Number,Number,Number,Boolean)"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="detailHeaderName">clippingRoundedRect</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></tbody></table><div class="detailBody"><code>
 public function clippingRoundedRect(x:Number, y:Number, width:Number, 
height:Number, radius:Number, outline:Boolean = false):void</code><p></p><p><span class="label"> Parameters </span></p><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td width="20px"></td><td><code><span class="label">x</span>:Number</code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">y</span>:Number</code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">width</span>:Number</code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">height</span>:Number</code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">radius</span>:Number</code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">outline</span>:Boolean</code> (default = <code>false</code>)<code></code></td></tr></tbody></table><p></p></div><a name="clippingText()"></a><a name="clippingText(Number,Number,String,Boolean)"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="detailHeaderName">clippingText</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></tbody></table><div class="detailBody"><code> public function clippingText(x:Number, y:Number, text:String, outline:Boolean = false):void</code><p></p><p><span class="label"> Parameters </span></p><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td width="20px"></td><td><code><span class="label">x</span>:Number</code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">y</span>:Number</code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">text</span>:String</code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">outline</span>:Boolean</code> (default = <code>false</code>)<code></code></td></tr></tbody></table><p></p></div><a name="curveTo()"></a><a name="curveTo(Number,Number,Number,Number,Number,Number)"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="detailHeaderName">curveTo</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></tbody></table><div class="detailBody"><code>
 public function curveTo(controlX1:Number, controlY1:Number, 
controlX2:Number, controlY2:Number, finalX3:Number, finalY3:Number):void</code><p></p><p></p><p>
		 The curveTo method draws a cubic bezier curve.
		 
		 </p><p><span class="label"> Parameters </span></p><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td width="20px"></td><td><code><span class="label">controlX1</span>:Number</code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">controlY1</span>:Number</code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">controlX2</span>:Number</code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">controlY2</span>:Number</code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">finalX3</span>:Number</code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">finalY3</span>:Number</code></td></tr></tbody></table><p></p><br><span class="label"> Example </span><br>This example shows how to draw some curves lines in the current page :
		 <b>Important : Always call the end() method when you're done</b>
		 
		 </div><a name="dispatchEvent()"></a><a name="dispatchEvent(flash.events.Event)"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="detailHeaderName">dispatchEvent</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></tbody></table><div class="detailBody"><code> public function dispatchEvent(event:Event):Boolean</code><p></p><p><span class="label"> Parameters </span></p><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td width="20px"></td><td><code><span class="label">event</span>:Event</code></td></tr></tbody></table><p></p><p></p><span class="label">Returns</span><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td width="20"></td><td><code>Boolean</code></td></tr></tbody></table></div><a name="drawCircle()"></a><a name="drawCircle(Number,Number,Number)"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="detailHeaderName">drawCircle</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></tbody></table><div class="detailBody"><code> public function drawCircle(x:Number, y:Number, radius:Number):void</code><p></p><p></p><p>
		 The drawCircle method draws a circle.
		 
		 </p><p><span class="label"> Parameters </span></p><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td width="20px"></td><td><code><span class="label">x</span>:Number</code> — X Position
		 </td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">y</span>:Number</code> — Y Position
		 </td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">radius</span>:Number</code> — Circle Radius
		 </td></tr></tbody></table><p></p><br><span class="label"> Example </span><br>This example shows how to create a rounded red ellipse in the current page :
		 
		 </div><a name="drawEllipse()"></a><a name="drawEllipse(Number,Number,Number,Number)"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="detailHeaderName">drawEllipse</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></tbody></table><div class="detailBody"><code> public function drawEllipse(x:Number, y:Number, radiusX:Number, radiusY:Number):void</code><p></p><p></p><p>
		 The drawEllipse method draws an ellipse.
		 
		 </p><p><span class="label"> Parameters </span></p><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td width="20px"></td><td><code><span class="label">x</span>:Number</code> — X Position
		 </td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">y</span>:Number</code> — Y Position
		 </td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">radiusX</span>:Number</code> — X Radius
		 </td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">radiusY</span>:Number</code> — Y Radius
		 </td></tr></tbody></table><p></p><br><span class="label"> Example </span><br>This example shows how to create a rounded red ellipse in the current page :
		 
		 </div><a name="drawLine()"></a><a name="drawLine(Number,Number,Number,Number)"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="detailHeaderName">drawLine</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></tbody></table><div class="detailBody"><code> public function drawLine(x1:Number, y1:Number, x2:Number, y2:Number):void</code><p></p><p></p><p>
		 
		 
		 
		 </p><p><span class="label"> Parameters </span></p><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td width="20px"></td><td><code><span class="label">x1</span>:Number</code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">y1</span>:Number</code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">x2</span>:Number</code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">y2</span>:Number</code></td></tr></tbody></table><p></p></div><a name="drawPolygone()"></a><a name="drawPolygone(Array)"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="detailHeaderName">drawPolygone</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></tbody></table><div class="detailBody"><code> public function drawPolygone(points:Array):void</code><p></p><p></p><p>
		 The drawPolygone method draws a polygone.
		 
		 </p><p><span class="label"> Parameters </span></p><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td width="20px"></td><td><code><span class="label">points</span>:Array</code> — Array of points
		 </td></tr></tbody></table><p></p><br><span class="label"> Example </span><br>This example shows how to create a polygone with a few points :
		 
		 </div><a name="drawRect()"></a><a name="drawRect(flash.geom.Rectangle)"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="detailHeaderName">drawRect</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></tbody></table><div class="detailBody"><code> public function drawRect(rect:Rectangle):void</code><p></p><p></p><p>
		 The drawRect method draws a rectangle shape.
		 
		 </p><p><span class="label"> Parameters </span></p><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td width="20px"></td><td><code><span class="label">rect</span>:Rectangle</code> — A flash.geom.Rectange object
		 </td></tr></tbody></table><p></p><br><span class="label"> Example </span><br>This example shows how to create a blue rectangle in the current page :
		 
		 </div><a name="drawRoundRect()"></a><a name="drawRoundRect(flash.geom.Rectangle,Number)"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="detailHeaderName">drawRoundRect</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></tbody></table><div class="detailBody"><code> public function drawRoundRect(rect:Rectangle, ellipseWidth:Number):void</code><p></p><p></p><p>
		 The drawRoundedRect method draws a rounded rectangle shape.
		 
		 </p><p><span class="label"> Parameters </span></p><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td width="20px"></td><td><code><span class="label">rect</span>:Rectangle</code> — A flash.geom.Rectange object
		 </td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">ellipseWidth</span>:Number</code> — Angle radius
		 </td></tr></tbody></table><p></p><br><span class="label"> Example </span><br>This example shows how to create a rounded green rectangle in the current page :
		 
		 </div><a name="drawRoundRectComplex()"></a><a name="drawRoundRectComplex(flash.geom.Rectangle,Number,Number,Number,Number)"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="detailHeaderName">drawRoundRectComplex</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></tbody></table><div class="detailBody"><code>
 public function drawRoundRectComplex(rect:Rectangle, 
topLeftEllipseWidth:Number, topRightEllipseWidth:Number, 
bottomLeftEllipseWidth:Number, bottomRightEllipseWidth:Number):void</code><p></p><p></p><p>
		 The drawComplexRoundRect method draws a rounded rectangle shape.
		 
		 </p><p><span class="label"> Parameters </span></p><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td width="20px"></td><td><code><span class="label">rect</span>:Rectangle</code> — A flash.geom.Rectange object
		 </td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">topLeftEllipseWidth</span>:Number</code> — Angle radius
		 </td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">topRightEllipseWidth</span>:Number</code> — Angle radius
		 </td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">bottomLeftEllipseWidth</span>:Number</code> — Angle radius
		 </td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">bottomRightEllipseWidth</span>:Number</code> — Angle radius
		 
		 </td></tr></tbody></table><p></p><br><span class="label"> Example </span><br>This example shows how to create a complex rounded green rectangle (different angles radius) in the current page :
		 
		 
		 </div><a name="drawSector()"></a><a name="drawSector(Number,Number,Number,Number,Number,String,Boolean,Number)"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="detailHeaderName">drawSector</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></tbody></table><div class="detailBody"><code>
 public function drawSector(xCenter:Number, yCenter:Number, 
radius:Number, a:Number, b:Number, style:String = FD, clockWise:Boolean =
 true, angleOrigin:Number = 90):void</code><p></p><p></p><p>
		 The drawSector method draws a sector, which allows you to draw a pie chart.
		 
		 </p><p><span class="label"> Parameters </span></p><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td width="20px"></td><td><code><span class="label">xCenter</span>:Number</code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">yCenter</span>:Number</code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">radius</span>:Number</code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">a</span>:Number</code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">b</span>:Number</code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">style</span>:String</code> (default = <code>FD</code>)<code></code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">clockWise</span>:Boolean</code> (default = <code>true</code>)<code></code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">angleOrigin</span>:Number</code> (default = <code>90</code>)<code></code></td></tr></tbody></table><p></p><br><span class="label"> Example </span><br>This example shows how to create a nice pie chart :
		 
		 </div><a name="end()"></a><a name="end(Boolean)"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="detailHeaderName">end</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></tbody></table><div class="detailBody"><code> public function end(closePath:Boolean = true):void</code><p></p><p></p><p>
		 The end method closes the stroke.
		 		 </p><p><span class="label"> Parameters </span></p><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td width="20px"></td><td><code><span class="label">closePath</span>:Boolean</code> (default = <code>true</code>)<code></code></td></tr></tbody></table><p></p><br><span class="label"> Example </span><br>This example shows how to draw some dashed lines in the current page with specific caps style and joint style :
		 <b>Important : Always call the end() method when you're done</b>
		 
		 </div><a name="endFill()"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="detailHeaderName">endFill</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></tbody></table><div class="detailBody"><code> public function endFill():void</code><p></p><p></p><p>
		 Ends all previous filling.
		 		 </p><br><span class="label"> Example </span><br>This example shows how to create a red rectangle in the current page :
		 
		 </div><a name="footer()"></a><a name="footer(String,Boolean,String)"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="detailHeaderName">footer</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></tbody></table><div class="detailBody"><code> public function footer(footerText:String, showPageNumber:Boolean = false, position:String = left):void</code><p></p><p><span class="label"> Parameters </span></p><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td width="20px"></td><td><code><span class="label">footerText</span>:String</code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">showPageNumber</span>:Boolean</code> (default = <code>false</code>)<code></code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">position</span>:String</code> (default = <code>left</code>)<code></code></td></tr></tbody></table><p></p></div><a name="getCurrentInternalLink()"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="detailHeaderName">getCurrentInternalLink</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></tbody></table><div class="detailBody"><code> public function getCurrentInternalLink():<a href="http://alivepdf.bytearray.org/alivepdf-asdoc/org/alivepdf/links/InternalLink.html">InternalLink</a></code><p></p><p></p><p>
		 Returns an InternalLink object linked to the current page at the current Y in the page.
		 
		 </p><p></p><span class="label">Returns</span><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td width="20"></td><td><code><a href="http://alivepdf.bytearray.org/alivepdf-asdoc/org/alivepdf/links/InternalLink.html">InternalLink</a></code> — InternalLink
		 </td></tr></tbody></table><br><span class="label"> Example </span><br>This example shows how to add an internal link using the getInternalLink method :
		 
		 </div><a name="getCurrentPage()"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="detailHeaderName">getCurrentPage</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></tbody></table><div class="detailBody"><code> public function getCurrentPage():<a href="http://alivepdf.bytearray.org/alivepdf-asdoc/org/alivepdf/pages/Page.html">Page</a></code><p></p><p></p><p>
		 Lets you retrieve the current Page.
		 		 </p><p></p><span class="label">Returns</span><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td width="20"></td><td><code><a href="http://alivepdf.bytearray.org/alivepdf-asdoc/org/alivepdf/pages/Page.html">Page</a></code> — Page A Page object
		 </td></tr></tbody></table><br><span class="label"> Example </span><br>This example shows how to retrieve the current page :
		 
		 </div><a name="getDefaultOrientation()"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="detailHeaderName">getDefaultOrientation</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></tbody></table><div class="detailBody"><code> public function getDefaultOrientation():String</code><p></p><p></p><p>
		 Returns the default PDF orientation.
		 
		 </p><p></p><span class="label">Returns</span><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td width="20"></td><td><code>String</code> — String
		 
		 </td></tr></tbody></table></div><a name="getDefaultSize()"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="detailHeaderName">getDefaultSize</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></tbody></table><div class="detailBody"><code> public function getDefaultSize():<a href="http://alivepdf.bytearray.org/alivepdf-asdoc/org/alivepdf/layout/Size.html">Size</a></code><p></p><p></p><p>
		 Returns the default PDF Size.
		 
		 </p><p></p><span class="label">Returns</span><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td width="20"></td><td><code><a href="http://alivepdf.bytearray.org/alivepdf-asdoc/org/alivepdf/layout/Size.html">Size</a></code> — Size
		 
		 </td></tr></tbody></table></div><a name="getDefaultUnit()"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="detailHeaderName">getDefaultUnit</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></tbody></table><div class="detailBody"><code> public function getDefaultUnit():String</code><p></p><p></p><p>
		 Returns the default PDF unit unit.
		 
		 </p><p></p><span class="label">Returns</span><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td width="20"></td><td><code>String</code> — String
		 
		 </td></tr></tbody></table></div><a name="getFonts()"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="detailHeaderName">getFonts</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></tbody></table><div class="detailBody"><code> public function getFonts():Array</code><p></p><p></p><p>
		 Lets you retrieve the fonts used in the PDF document.
		 		 </p><p></p><span class="label">Returns</span><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td width="20"></td><td><code>Array</code> — Array An Array of fonts objects (CoreFont, EmbeddedFont)
		 </td></tr></tbody></table><br><span class="label"> Example </span><br>This example shows how to retrieve the fonts :
		 
		 </div><a name="getMargins()"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="detailHeaderName">getMargins</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></tbody></table><div class="detailBody"><code> public function getMargins():Rectangle</code><p></p><p></p><p>
		 Lets you retrieve the margins dimensions.
		 		 </p><p></p><span class="label">Returns</span><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td width="20"></td><td><code>Rectangle</code> — Rectangle
		 </td></tr></tbody></table><br><span class="label"> Example </span><br>This example shows how to get the margins dimensions :
		 
		 </div><a name="getPage()"></a><a name="getPage(int)"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="detailHeaderName">getPage</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></tbody></table><div class="detailBody"><code> public function getPage(index:int):<a href="http://alivepdf.bytearray.org/alivepdf-asdoc/org/alivepdf/pages/Page.html">Page</a></code><p></p><p></p><p>
		 Lets you retrieve a Page object.
		 		 </p><p><span class="label"> Parameters </span></p><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td width="20px"></td><td><code><span class="label">index</span>:int</code> — page number, from 1 to total numbers of pages
		 </td></tr></tbody></table><p></p><p></p><span class="label">Returns</span><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td width="20"></td><td><code><a href="http://alivepdf.bytearray.org/alivepdf-asdoc/org/alivepdf/pages/Page.html">Page</a></code> — Page
		 </td></tr></tbody></table><br><span class="label"> Example </span><br>This example shows how to retrieve the first page :
		 
		 </div><a name="getPages()"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="detailHeaderName">getPages</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></tbody></table><div class="detailBody"><code> public function getPages():Array</code><p></p><p></p><p>
		 Lets you retrieve all the PDF pages.
		 		 </p><p></p><span class="label">Returns</span><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td width="20"></td><td><code>Array</code> — Array
		 </td></tr></tbody></table><br><span class="label"> Example </span><br>This example shows how to retrieve all the PDF pages :
		 
		 </div><a name="getX()"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="detailHeaderName">getX</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></tbody></table><div class="detailBody"><code> public function getX():Number</code><p></p><p></p><p>
		 Lets you retrieve the X position for the current page.
		 		 </p><p></p><span class="label">Returns</span><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td width="20"></td><td><code>Number</code> — Number the X position
		 </td></tr></tbody></table></div><a name="getY()"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="detailHeaderName">getY</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></tbody></table><div class="detailBody"><code> public function getY():Number</code><p></p><p></p><p>
		 Lets you retrieve the Y position for the current page.
		 		 </p><p></p><span class="label">Returns</span><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td width="20"></td><td><code>Number</code> — Number the Y position
		 </td></tr></tbody></table></div><a name="gotoPage()"></a><a name="gotoPage(int)"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="detailHeaderName">gotoPage</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></tbody></table><div class="detailBody"><code> public function gotoPage(index:int):void</code><p></p><p></p><p>
		 Lets you move to a Page in the PDF.
		 		 </p><p><span class="label"> Parameters </span></p><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td width="20px"></td><td><code><span class="label">index</span>:int</code> — page number, from 1 to total numbers of pages
		 </td></tr></tbody></table><p></p><br><span class="label"> Example </span><br>This example shows how to move to the first page :
		 
		 </div><a name="hasEventListener()"></a><a name="hasEventListener(String)"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="detailHeaderName">hasEventListener</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></tbody></table><div class="detailBody"><code> public function hasEventListener(type:String):Boolean</code><p></p><p><span class="label"> Parameters </span></p><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td width="20px"></td><td><code><span class="label">type</span>:String</code></td></tr></tbody></table><p></p><p></p><span class="label">Returns</span><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td width="20"></td><td><code>Boolean</code></td></tr></tbody></table></div><a name="header()"></a><a name="header(String)"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="detailHeaderName">header</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></tbody></table><div class="detailBody"><code> public function header(headerText:String):void</code><p></p><p><span class="label"> Parameters </span></p><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td width="20px"></td><td><code><span class="label">headerText</span>:String</code></td></tr></tbody></table><p></p></div><a name="linearGradient()"></a><a name="linearGradient(Number,Number,Number,Number,Array,Array,Array)"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="detailHeaderName">linearGradient</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></tbody></table><div class="detailBody"><code> public function linearGradient(x:Number, y:Number, width:Number, height:Number, col1:Array, col2:Array, coordinates:Array):void</code><p></p><p><span class="label"> Parameters </span></p><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td width="20px"></td><td><code><span class="label">x</span>:Number</code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">y</span>:Number</code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">width</span>:Number</code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">height</span>:Number</code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">col1</span>:Array</code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">col2</span>:Array</code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">coordinates</span>:Array</code></td></tr></tbody></table><p></p></div><a name="lineStyle()"></a><a name="lineStyle(org.alivepdf.colors.IColor,Number,Number,Number,String,String,org.alivepdf.drawing.DashedLine,String,String,Number)"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="detailHeaderName">lineStyle</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></tbody></table><div class="detailBody"><code> public function lineStyle(color:<a href="http://alivepdf.bytearray.org/alivepdf-asdoc/org/alivepdf/colors/IColor.html">IColor</a>, thickness:Number = 1, flatness:Number = 0, alpha:Number = 1, rule:String = NonZeroWinding, blendMode:String = Normal, style:<a href="http://alivepdf.bytearray.org/alivepdf-asdoc/org/alivepdf/drawing/DashedLine.html">DashedLine</a> = null, caps:String = null, joints:String = null, miterLimit:Number = 3):void</code><p></p><p></p><p>
		 Sets the stroke style.
		 
		 </p><p><span class="label"> Parameters </span></p><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td width="20px"></td><td><code><span class="label">color</span>:<a href="http://alivepdf.bytearray.org/alivepdf-asdoc/org/alivepdf/colors/IColor.html">IColor</a></code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">thickness</span>:Number</code> (default = <code>1</code>)<code></code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">flatness</span>:Number</code> (default = <code>0</code>)<code></code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">alpha</span>:Number</code> (default = <code>1</code>)<code></code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">rule</span>:String</code> (default = <code>NonZeroWinding</code>)<code></code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">blendMode</span>:String</code> (default = <code>Normal</code>)<code></code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">style</span>:<a href="http://alivepdf.bytearray.org/alivepdf-asdoc/org/alivepdf/drawing/DashedLine.html">DashedLine</a></code> (default = <code>null</code>)<code></code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">caps</span>:String</code> (default = <code>null</code>)<code></code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">joints</span>:String</code> (default = <code>null</code>)<code></code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">miterLimit</span>:Number</code> (default = <code>3</code>)<code></code></td></tr></tbody></table><p></p><br><span class="label"> Example </span><br>This example shows how to draw a star with an "even odd" rule :
		 
		 This example shows how to draw a star with an "non-zero" winding rule :
		 
		 
		 </div><a name="lineTo()"></a><a name="lineTo(Number,Number)"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="detailHeaderName">lineTo</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></tbody></table><div class="detailBody"><code> public function lineTo(x:Number, y:Number):void</code><p></p><p></p><p>
		 Lets you draw a stroke from the current point to the new point.
		 		 </p><p><span class="label"> Parameters </span></p><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td width="20px"></td><td><code><span class="label">x</span>:Number</code> — X position
		 </td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">y</span>:Number</code> — Y position
		 </td></tr></tbody></table><p></p><br><span class="label"> Example </span><br>This example shows how to draw some dashed lines in the current page with specific caps style and joint style :
		 <b>Important : Always call the end() method when you're done</b>
		 
		 </div><a name="moveTo()"></a><a name="moveTo(Number,Number)"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="detailHeaderName">moveTo</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></tbody></table><div class="detailBody"><code> public function moveTo(x:Number, y:Number):void</code><p></p><p></p><p>
		 Lets you move the current drawing point to the specified destination.
		 		 </p><p><span class="label"> Parameters </span></p><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td width="20px"></td><td><code><span class="label">x</span>:Number</code> — X position
		 </td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">y</span>:Number</code> — Y position
		 </td></tr></tbody></table><p></p><br><span class="label"> Example </span><br>This example shows how to move the pen to 120,200 :
		 
		 </div><a name="newLine()"></a><a name="newLine(any)"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="detailHeaderName">newLine</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></tbody></table><div class="detailBody"><code> public function newLine(height:*):void</code><p></p><p></p><p>
		 Lets you insert a line break for text.
		 		 </p><p><span class="label"> Parameters </span></p><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td width="20px"></td><td><code><span class="label">height</span>:*</code> — Line break height
		 </td></tr></tbody></table><p></p><br><span class="label"> Example </span><br>This example shows how to add a line break :
		 
		 </div><a name="radialGradient()"></a><a name="radialGradient(Number,Number,Number,Number,Array,Array,Array)"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="detailHeaderName">radialGradient</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></tbody></table><div class="detailBody"><code> public function radialGradient(x:Number, y:Number, width:Number, height:Number, col1:Array, col2:Array, coordinates:Array):void</code><p></p><p><span class="label"> Parameters </span></p><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td width="20px"></td><td><code><span class="label">x</span>:Number</code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">y</span>:Number</code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">width</span>:Number</code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">height</span>:Number</code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">col1</span>:Array</code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">col2</span>:Array</code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">coordinates</span>:Array</code></td></tr></tbody></table><p></p></div><a name="removeAllPages()"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="detailHeaderName">removeAllPages</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></tbody></table><div class="detailBody"><code> public function removeAllPages():void</code><p></p><p></p><p>
		 Lets you remove all the pages from the PDF.
		 		 </p><br><span class="label"> Example </span><br>This example shows how to remove all the pages :
		 
		 </div><a name="removeEventListener()"></a><a name="removeEventListener(String,Function,Boolean)"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="detailHeaderName">removeEventListener</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></tbody></table><div class="detailBody"><code> public function removeEventListener(type:String, listener:Function, useCapture:Boolean = false):void</code><p></p><p><span class="label"> Parameters </span></p><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td width="20px"></td><td><code><span class="label">type</span>:String</code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">listener</span>:Function</code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">useCapture</span>:Boolean</code> (default = <code>false</code>)<code></code></td></tr></tbody></table><p></p></div><a name="removeFont()"></a><a name="removeFont(org.alivepdf.fonts.IFont)"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="detailHeaderName">removeFont</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></tbody></table><div class="detailBody"><code> public function removeFont(font:<a href="http://alivepdf.bytearray.org/alivepdf-asdoc/org/alivepdf/fonts/IFont.html">IFont</a>):void</code><p></p><p></p><p>
		 Lets you remove an embedded font from the PDF.
		 		 </p><p><span class="label"> Parameters </span></p><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td width="20px"></td><td><code><span class="label">font</span>:<a href="http://alivepdf.bytearray.org/alivepdf-asdoc/org/alivepdf/fonts/IFont.html">IFont</a></code> — The embedded font
		 </td></tr></tbody></table><p></p><br><span class="label"> Example </span><br>This example shows how to remove an embedded font :
		 
		 </div><a name="removePage()"></a><a name="removePage(int)"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="detailHeaderName">removePage</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></tbody></table><div class="detailBody"><code> public function removePage(index:int):<a href="http://alivepdf.bytearray.org/alivepdf-asdoc/org/alivepdf/pages/Page.html">Page</a></code><p></p><p></p><p>
		 Lets you remove a Page from the PDF.
		 		 </p><p><span class="label"> Parameters </span></p><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td width="20px"></td><td><code><span class="label">index</span>:int</code> — page number, from 1 to total numbers of pages
		 </td></tr></tbody></table><p></p><p></p><span class="label">Returns</span><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td width="20"></td><td><code><a href="http://alivepdf.bytearray.org/alivepdf-asdoc/org/alivepdf/pages/Page.html">Page</a></code> — Page
		 </td></tr></tbody></table><br><span class="label"> Example </span><br>This example shows how to remove the first page :
		 
		 
		 If you want to remove pages each by each, you can combine removePage with getPageCount:
		 
		 </div><a name="resetMargins()"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="detailHeaderName">resetMargins</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></tbody></table><div class="detailBody"><code> public function resetMargins():void</code><p></p><p></p><p>
		 Lets you reset the margins dimensions.
		 		 </p><br><span class="label"> Example </span><br>This example shows how to reset the margins dimensions :
		 
		 </div><a name="rotate()"></a><a name="rotate(Number,Number,Number)"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="detailHeaderName">rotate</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></tbody></table><div class="detailBody"><code> public function rotate(angle:Number, x:Number = -1, y:Number = -1):void</code><p></p><p></p><p>
		 Allows you to rotate any content drawn after the rotate() call  
		 </p><p><span class="label"> Parameters </span></p><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td width="20px"></td><td><code><span class="label">angle</span>:Number</code> — Rotation angle
		 </td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">x</span>:Number</code> (default = <code>-1</code>)<code></code> — X position
		 </td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">y</span>:Number</code> (default = <code>-1</code>)<code></code> — Y position
		 
		 </td></tr></tbody></table><p></p></div><a name="rotatePage()"></a><a name="rotatePage(int,Number)"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="detailHeaderName">rotatePage</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></tbody></table><div class="detailBody"><code> public function rotatePage(number:int, rotation:Number):void</code><p></p><p></p><p>
		 Lets you rotate a specific page (between 1 and n-1).
		 		 </p><p><span class="label"> Parameters </span></p><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td width="20px"></td><td><code><span class="label">number</span>:int</code> — Page number
		 </td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">rotation</span>:Number</code> — Page rotation (must be a multiple of 90)
		 </td></tr></tbody></table><p></p><br><span class="label">Throws</span><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td width="20"></td><td><code>RangeError
		 </code></td></tr></tbody></table><br><span class="label"> Example </span><br>This example shows how to rotate the first page 90 clock wise :
		 
		 
		 This example shows how to rotate the first page 90 counter clock wise :
		 
		 </div><a name="save()"></a><a name="save(String,String,String,String,String)"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="detailHeaderName">save</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></tbody></table><div class="detailBody"><code>
 public function save(method:String, url:String, downloadMethod:String =
 inline, fileName:String = generated.pdf, frame:String = _blank):*</code><p></p><p></p><p>
		 Allows you to save the PDF locally (Flash Player 10 minmum required) or remotely through a server-side script.
		 		 </p><p><span class="label"> Parameters </span></p><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td width="20px"></td><td><code><span class="label">method</span>:String</code>
 — Can be se to Method.LOCAL, the savePDF will return the PDF ByteArray.
 When Method.REMOTE is passed, just specify the path to the create.php 
file
		 </td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">url</span>:String</code> — The url of the create.php file
		 </td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">downloadMethod</span>:String</code> (default = <code>inline</code>)<code></code>
 — Lets you specify the way the PDF is going to be available. Use 
Download.INLINE if you want the PDF to be opened in the browser, use 
Download.ATTACHMENT if you want to make it available with a save-as 
dialog box
		 </td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">fileName</span>:String</code> (default = <code>generated.pdf</code>)<code></code> — The name of the PDF, only available when Method.REMOTE is used
		 </td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">frame</span>:String</code> (default = <code>_blank</code>)<code></code> — The frame where the window whould be opened
		 </td></tr></tbody></table><p></p><p></p><span class="label">Returns</span><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td width="20"></td><td><code>*</code> — The ByteArray PDF when Method.LOCAL is used, otherwise the method returns null
		 </td></tr></tbody></table><br><span class="label"> Example </span><br>This
 example shows how to save the PDF on the desktop with the AIR runtime :
		 
		 
		 This example shows how to save the PDF through a download dialog-box 
with Flash or Flex :
		 
		 
		 This example shows how to view the PDF in the browser with Flash or 
Flex :
		 
		 
		 This example shows how to save the PDF through a download dialog-box 
with Flash or Flex with any server involved (Flash Player 10 required) :
		 
		 
		 </div><a name="setAdvanceTiming()"></a><a name="setAdvanceTiming(int)"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="detailHeaderName">setAdvanceTiming</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></tbody></table><div class="detailBody"><code> public function setAdvanceTiming(timing:int):void</code><p></p><p></p><p>
		 Lets you set specify the timing (in seconds) a page is shown when the PDF is shown in fullscreen mode.
		 		 </p><p><span class="label"> Parameters </span></p><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td width="20px"></td><td><code><span class="label">timing</span>:int</code> — The title
		 </td></tr></tbody></table><p></p><br><span class="label"> Example </span><br>This example shows how to set a specific advance timing (5 seconds) for the current page :
		 
		 
		 You can also specify this on the Page object :
		 
		 </div><a name="setAliasNbPages()"></a><a name="setAliasNbPages(String)"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="detailHeaderName">setAliasNbPages</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></tbody></table><div class="detailBody"><code> public function setAliasNbPages(alias:String = {nb}):void</code><p></p><p></p><p>
		 Lets you specify an alias for the total number of pages.
		 		 </p><p><span class="label"> Parameters </span></p><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td width="20px"></td><td><code><span class="label">alias</span>:String</code> (default = <code>{nb}</code>)<code></code> — Alias to use
		 </td></tr></tbody></table><p></p><br><span class="label"> Example </span><br>This example shows how to show the total number of pages :
		 
		 </div><a name="setAlpha()"></a><a name="setAlpha(Number,String)"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="detailHeaderName">setAlpha</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></tbody></table><div class="detailBody"><code> public function setAlpha(alpha:Number, blendMode:String = Normal):void</code><p></p><p></p><p>
		 Lets you specify the opacity for the next drawing operations, from 0 (100% transparent) to 1 (100% opaque).
		 		 </p><p><span class="label"> Parameters </span></p><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td width="20px"></td><td><code><span class="label">alpha</span>:Number</code> — Opacity
		 </td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">blendMode</span>:String</code> (default = <code>Normal</code>)<code></code> — Blend mode, can be Blend.DIFFERENCE, BLEND.HARDLIGHT, etc.
		 </td></tr></tbody></table><p></p><br><span class="label"> Example </span><br>This example shows how to set the transparency to 50% for any following drawing, image or text operation :
		 
		 </div><a name="setAuthor()"></a><a name="setAuthor(String)"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="detailHeaderName">setAuthor</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></tbody></table><div class="detailBody"><code> public function setAuthor(author:String):void</code><p></p><p></p><p>
		 Sets the specified author for the PDF.
		 		 </p><p><span class="label"> Parameters </span></p><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td width="20px"></td><td><code><span class="label">author</span>:String</code> — The author
		 </td></tr></tbody></table><p></p><br><span class="label"> Example </span><br>This example shows how to add a specific author to the PDF tags :
		 
		 </div><a name="setAutoPageBreak()"></a><a name="setAutoPageBreak(Boolean,Number)"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="detailHeaderName">setAutoPageBreak</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></tbody></table><div class="detailBody"><code> public function setAutoPageBreak(auto:Boolean, margin:Number):void</code><p></p><p></p><p>
		 Lets you enable or disable auto page break mode and triggering margin.
		 
		 </p><p><span class="label"> Parameters </span></p><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td width="20px"></td><td><code><span class="label">auto</span>:Boolean</code> — Page break mode
		 </td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">margin</span>:Number</code> — Bottom margin
		 
		 </td></tr></tbody></table><p></p></div><a name="setBottomMargin()"></a><a name="setBottomMargin(Number)"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="detailHeaderName">setBottomMargin</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></tbody></table><div class="detailBody"><code> public function setBottomMargin(margin:Number):void</code><p></p><p></p><p>
		 Lets you specify the bottom margin
		 		 </p><p><span class="label"> Parameters </span></p><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td width="20px"></td><td><code><span class="label">margin</span>:Number</code> — Bottom margin
		 </td></tr></tbody></table><p></p><br><span class="label"> Example </span><br>This example shows how set bottom margin for the PDF document :
		 
		 </div><a name="setCreator()"></a><a name="setCreator(String)"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="detailHeaderName">setCreator</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></tbody></table><div class="detailBody"><code> public function setCreator(creator:String):void</code><p></p><p></p><p>
		 Sets the specified creator for the PDF.
		 		 </p><p><span class="label"> Parameters </span></p><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td width="20px"></td><td><code><span class="label">creator</span>:String</code> — Name of the PDF creator
		 </td></tr></tbody></table><p></p><br><span class="label"> Example </span><br>This example shows how to set a creator name to the PDF tags :
		 
		 </div><a name="setDisplayMode()"></a><a name="setDisplayMode(String,String,String,Number)"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="detailHeaderName">setDisplayMode</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></tbody></table><div class="detailBody"><code>
 public function setDisplayMode(zoom:String = FullWidth, layout:String =
 SinglePage, mode:String = UseNone, zoomValue:Number = 1):void</code><p></p><p></p><p>
		 Lets you set a specific display mode, the DisplayMode takes care of the general layout of the PDF in the PDF reader
		 		 </p><p><span class="label"> Parameters </span></p><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td width="20px"></td><td><code><span class="label">zoom</span>:String</code> (default = <code>FullWidth</code>)<code></code> — Zoom mode, can be Display.FULL_PAGE, Display.FULL_WIDTH, Display.REAL, Display.DEFAULT
		 </td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">layout</span>:String</code> (default = <code>SinglePage</code>)<code></code> — Layout of the PDF document, can be Layout.SINGLE_PAGE, Layout.ONE_COLUMN, Layout.TWO_COLUMN_LEFT, Layout.TWO_COLUMN_RIGHT
		 </td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">mode</span>:String</code> (default = <code>UseNone</code>)<code></code> — PageMode can be pageMode.USE_NONE, PageMode.USE_OUTLINES, PageMode.USE_THUMBS, PageMode.FULL_SCREEN
		 </td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">zoomValue</span>:Number</code> (default = <code>1</code>)<code></code> — Zoom factor to be used when the PDF is opened, a value of 1.5 would open the PDF with a 150% zoom
		 </td></tr></tbody></table><p></p><br><span class="label"> Example </span><br>This example creates a PDF which opens at full page scaling, one page at a time :
		 
		 To create a full screen PDF you would write :
		 
		 
		 To create a PDF which will open with a 150% zoom, you would write :
		 
		 </div><a name="setFont()"></a><a name="setFont(org.alivepdf.fonts.IFont,int,Boolean)"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="detailHeaderName">setFont</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></tbody></table><div class="detailBody"><code> public function setFont(font:<a href="http://alivepdf.bytearray.org/alivepdf-asdoc/org/alivepdf/fonts/IFont.html">IFont</a>, size:int = 12, underlined:Boolean = false):void</code><p></p><p></p><p>
		 Lets you set a specific font.
		 Note : Since release 0.1.5, you do not need to call the addFont 
method anymore. It will be called automatically internally if needed.
		 		 </p><p><span class="label"> Parameters </span></p><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td width="20px"></td><td><code><span class="label">font</span>:<a href="http://alivepdf.bytearray.org/alivepdf-asdoc/org/alivepdf/fonts/IFont.html">IFont</a></code> — font, can be a core font (org.alivepdf.fonts.CoreFont), or an embedded font (org.alivepdf.fonts.EmbeddedFont)
		 </td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">size</span>:int</code> (default = <code>12</code>)<code></code> — Any font size
		 </td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">underlined</span>:Boolean</code> (default = <code>false</code>)<code></code> — if text should be underlined
		 </td></tr></tbody></table><p></p><br><span class="label"> Example </span><br>This example shows how to set the Helvetica font, with a bold style :
		 
		 </div><a name="setFontSize()"></a><a name="setFontSize(int)"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="detailHeaderName">setFontSize</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></tbody></table><div class="detailBody"><code> public function setFontSize(size:int):void</code><p></p><p></p><p>
		 Lets you set a new size for the current font.
		 		 </p><p><span class="label"> Parameters </span></p><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td width="20px"></td><td><code><span class="label">size</span>:int</code> — Font size
		 </td></tr></tbody></table><p></p><br><span class="label"> Example </span><br>This example shows how to se the current font to 18 :
		 
		 </div><a name="setGridPositionOnNextPages()"></a><a name="setGridPositionOnNextPages(Number,Number)"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="detailHeaderName">setGridPositionOnNextPages</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></tbody></table><div class="detailBody"><code> public function setGridPositionOnNextPages(xvalue:Number = 10, yvalue:Number = 10):void</code><p></p><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td style="white-space:nowrap" valign="top"><b> Language Version :&nbsp;</b></td><td>ActionScript This</td></tr></tbody></table><p></p><p></p><p>
		 This method is used to add grid when used in auto mode for big chunck of data into other pages.
		 This may be helpful when you just want to set x,y of grid.
		 You may set using setY after addGrid method, but is 2x slow than this simple method.
		 
		 </p><p><span class="label"> Parameters </span></p><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td width="20px"></td><td><code><span class="label">xvalue</span>:Number</code> (default = <code>10</code>)<code></code></td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">yvalue</span>:Number</code> (default = <code>10</code>)<code></code></td></tr></tbody></table><p></p></div><a name="setKeywords()"></a><a name="setKeywords(String)"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="detailHeaderName">setKeywords</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></tbody></table><div class="detailBody"><code> public function setKeywords(keywords:String):void</code><p></p><p></p><p>
		 Sets the specified keywords for the PDF.
		 		 </p><p><span class="label"> Parameters </span></p><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td width="20px"></td><td><code><span class="label">keywords</span>:String</code> — The keywords
		 </td></tr></tbody></table><p></p><br><span class="label"> Example </span><br>This example shows how to add some keywords to the PDF tags :
		 
		 </div><a name="setLeftMargin()"></a><a name="setLeftMargin(Number)"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="detailHeaderName">setLeftMargin</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></tbody></table><div class="detailBody"><code> public function setLeftMargin(margin:Number):void</code><p></p><p></p><p>
		 Lets you specify the left margin.
		 		 </p><p><span class="label"> Parameters </span></p><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td width="20px"></td><td><code><span class="label">margin</span>:Number</code> — Left margin
		 </td></tr></tbody></table><p></p><br><span class="label"> Example </span><br>This example shows how set left margin for the PDF document :
		 
		 </div><a name="setMargins()"></a><a name="setMargins(Number,Number,Number,Number)"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="detailHeaderName">setMargins</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></tbody></table><div class="detailBody"><code> public function setMargins(left:Number, top:Number, right:Number = -1, bottom:Number = 20):void</code><p></p><p></p><p>
		 Lets you specify the left, top, and right margins.
		 		 </p><p><span class="label"> Parameters </span></p><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td width="20px"></td><td><code><span class="label">left</span>:Number</code> — Left margin
		 </td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">top</span>:Number</code> — Right number
		 </td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">right</span>:Number</code> (default = <code>-1</code>)<code></code> — Top number
		 </td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">bottom</span>:Number</code> (default = <code>20</code>)<code></code> — Bottom number
		 </td></tr></tbody></table><p></p><br><span class="label"> Example </span><br>This example shows how to set margins for the PDF document :
		 
		 </div><a name="setRightMargin()"></a><a name="setRightMargin(Number)"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="detailHeaderName">setRightMargin</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></tbody></table><div class="detailBody"><code> public function setRightMargin(margin:Number):void</code><p></p><p></p><p>
		 Lets you specify the right margin.
		 		 </p><p><span class="label"> Parameters </span></p><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td width="20px"></td><td><code><span class="label">margin</span>:Number</code> — Right margin
		 </td></tr></tbody></table><p></p><br><span class="label"> Example </span><br>This example shows how set right margin for the PDF document :
		 
		 </div><a name="setStartingPage()"></a><a name="setStartingPage(int)"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="detailHeaderName">setStartingPage</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></tbody></table><div class="detailBody"><code> public function setStartingPage(index:int):void</code><p></p><p></p><p>
		 Lets you specify which page should be viewed by default when the document is opened.
		 Note : This method must be called once all the pages have been created and added through addPage().
		 		 </p><p><span class="label"> Parameters </span></p><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td width="20px"></td><td><code><span class="label">index</span>:int</code> — Page number
		 </td></tr></tbody></table><p></p><br><span class="label"> Example </span><br>This example shows how to sepcify the second page to be viewed by default :
		 
		 </div><a name="setSubject()"></a><a name="setSubject(String)"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="detailHeaderName">setSubject</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></tbody></table><div class="detailBody"><code> public function setSubject(subject:String):void</code><p></p><p></p><p>
		 Lets you set a subject for the PDF.
		 		 </p><p><span class="label"> Parameters </span></p><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td width="20px"></td><td><code><span class="label">subject</span>:String</code> — The subject
		 </td></tr></tbody></table><p></p><br><span class="label"> Example </span><br> This example shows how to set a specific subject to the PDF tags :
		 
		 </div><a name="setTitle()"></a><a name="setTitle(String)"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="detailHeaderName">setTitle</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></tbody></table><div class="detailBody"><code> public function setTitle(title:String):void</code><p></p><p></p><p>
		 Lets you set a title for the PDF.
		 		 </p><p><span class="label"> Parameters </span></p><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td width="20px"></td><td><code><span class="label">title</span>:String</code> — The title
		 </td></tr></tbody></table><p></p><br><span class="label"> Example </span><br>This example shows how to set a specific title to the PDF tags :
		 
		 </div><a name="setTopMargin()"></a><a name="setTopMargin(Number)"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="detailHeaderName">setTopMargin</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></tbody></table><div class="detailBody"><code> public function setTopMargin(margin:Number):void</code><p></p><p></p><p>
		 Lets you specify the top margin.
		 		 </p><p><span class="label"> Parameters </span></p><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td width="20px"></td><td><code><span class="label">margin</span>:Number</code> — Top margin
		 </td></tr></tbody></table><p></p><br><span class="label"> Example </span><br>This example shows how set top margin for the PDF document :
		 
		 </div><a name="setViewerPreferences()"></a><a name="setViewerPreferences(String,String,String,String,String,String)"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="detailHeaderName">setViewerPreferences</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></tbody></table><div class="detailBody"><code>
 public function setViewerPreferences(toolbar:String = false, 
menubar:String = false, windowUI:String = false, fitWindow:String = 
false, centeredWindow:String = false, displayTitle:String = false):void</code><p></p><p></p><p>
		 Lets you control the way the document is to be presented on the screen or in print.
		 Note : Very useful to hide any window when the PDF is opened.
		 		 </p><p><span class="label"> Parameters </span></p><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td width="20px"></td><td><code><span class="label">toolbar</span>:String</code> (default = <code>false</code>)<code></code> — Toolbar behavior
		 </td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">menubar</span>:String</code> (default = <code>false</code>)<code></code> — Menubar behavior
		 </td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">windowUI</span>:String</code> (default = <code>false</code>)<code></code> — WindowUI behavior
		 </td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">fitWindow</span>:String</code> (default = <code>false</code>)<code></code> — Specify whether to resize the document's window to fit the size of the first displayed page.
		 </td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">centeredWindow</span>:String</code> (default = <code>false</code>)<code></code> — Specify whether to position the document's window in the center of the screen.
		 </td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">displayTitle</span>:String</code> (default = <code>false</code>)<code></code> — Specify whether the window's title bar should display the document title taken from the value passed to the setTitle method
		 </td></tr></tbody></table><p></p><br><span class="label"> Example </span><br>This example shows how to present the document centered on the screen with no toolbars :
		 
		 </div><a name="setVisible()"></a><a name="setVisible(String)"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="detailHeaderName">setVisible</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></tbody></table><div class="detailBody"><code> public function setVisible(visible:String):void</code><p></p><p><span class="label"> Parameters </span></p><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td width="20px"></td><td><code><span class="label">visible</span>:String</code></td></tr></tbody></table><p></p></div><a name="setX()"></a><a name="setX(Number)"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="detailHeaderName">setX</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></tbody></table><div class="detailBody"><code> public function setX(x:Number):void</code><p></p><p></p><p>
		 Lets you specify the X position for the current page.
		 		 </p><p><span class="label"> Parameters </span></p><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td width="20px"></td><td><code><span class="label">x</span>:Number</code> — The X position
		 </td></tr></tbody></table><p></p></div><a name="setXY()"></a><a name="setXY(Number,Number)"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="detailHeaderName">setXY</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></tbody></table><div class="detailBody"><code> public function setXY(x:Number, y:Number):void</code><p></p><p></p><p>
		 Lets you specify the X and Y position for the current page.
		 		 </p><p><span class="label"> Parameters </span></p><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td width="20px"></td><td><code><span class="label">x</span>:Number</code> — The X position
		 </td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">y</span>:Number</code> — The Y position
		 </td></tr></tbody></table><p></p></div><a name="setY()"></a><a name="setY(Number)"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="detailHeaderName">setY</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></tbody></table><div class="detailBody"><code> public function setY(y:Number):void</code><p></p><p></p><p>
		 Lets you specify the Y position for the current page.
		 		 </p><p><span class="label"> Parameters </span></p><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td width="20px"></td><td><code><span class="label">y</span>:Number</code> — The Y position
		 </td></tr></tbody></table><p></p></div><a name="skew()"></a><a name="skew(Number,Number,Number,Number)"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="detailHeaderName">skew</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></tbody></table><div class="detailBody"><code> public function skew(ax:Number, ay:Number, x:Number = -1, y:Number = -1):void</code><p></p><p></p><p>
		 Allows you to skew any content drawn after the skew() call  
		 </p><p><span class="label"> Parameters </span></p><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td width="20px"></td><td><code><span class="label">ax</span>:Number</code> — X skew angle
		 </td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">ay</span>:Number</code> — Y skew angle
		 </td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">x</span>:Number</code> (default = <code>-1</code>)<code></code> — X position
		 </td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">y</span>:Number</code> (default = <code>-1</code>)<code></code> — Y position
		 
		 </td></tr></tbody></table><p></p></div><a name="textStyle()"></a><a name="textStyle(org.alivepdf.colors.IColor,Number,int,Number,Number,Number,Number)"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="detailHeaderName">textStyle</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></tbody></table><div class="detailBody"><code> public function textStyle(color:<a href="http://alivepdf.bytearray.org/alivepdf-asdoc/org/alivepdf/colors/IColor.html">IColor</a>,
 alpha:Number = 1, rendering:int = 0, wordSpace:Number = 0, 
characterSpace:Number = 0, scale:Number = 100, leading:Number = 0):void</code><p></p><p></p><p>
		 Sets the text style with an appropriate color, alpha etc.
		 		 </p><p><span class="label"> Parameters </span></p><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td width="20px"></td><td><code><span class="label">color</span>:<a href="http://alivepdf.bytearray.org/alivepdf-asdoc/org/alivepdf/colors/IColor.html">IColor</a></code> — Color object, can be CMYKColor, GrayColor, or RGBColor
		 </td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">alpha</span>:Number</code> (default = <code>1</code>)<code></code> — Text opacity
		 </td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">rendering</span>:int</code> (default = <code>0</code>)<code></code> — pRendering Specify the text rendering mode
		 </td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">wordSpace</span>:Number</code> (default = <code>0</code>)<code></code> — Spaces between each words
		 </td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">characterSpace</span>:Number</code> (default = <code>0</code>)<code></code> — Spaces between each characters
		 </td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">scale</span>:Number</code> (default = <code>100</code>)<code></code> — Text scaling
		 </td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">leading</span>:Number</code> (default = <code>0</code>)<code></code> — Text leading
		 </td></tr></tbody></table><p></p><br><span class="label"> Example </span><br>This example shows how to set a specific black text style with full opacity :
		 
		 </div><a name="toString()"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="detailHeaderName">toString</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></tbody></table><div class="detailBody"><code> public function toString():String</code><p></p><p></p><span class="label">Returns</span><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td width="20"></td><td><code>String</code></td></tr></tbody></table></div><a name="unsetClipping()"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="detailHeaderName">unsetClipping</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></tbody></table><div class="detailBody"><code> public function unsetClipping():void</code><p></p></div><a name="willTrigger()"></a><a name="willTrigger(String)"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="detailHeaderName">willTrigger</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></tbody></table><div class="detailBody"><code> public function willTrigger(type:String):Boolean</code><p></p><p><span class="label"> Parameters </span></p><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td width="20px"></td><td><code><span class="label">type</span>:String</code></td></tr></tbody></table><p></p><p></p><span class="label">Returns</span><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td width="20"></td><td><code>Boolean</code></td></tr></tbody></table></div><a name="writeFlashHtmlText()"></a><a name="writeFlashHtmlText(Number,String,org.alivepdf.links.ILink)"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="detailHeaderName">writeFlashHtmlText</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></tbody></table><div class="detailBody"><code> public function writeFlashHtmlText(pHeight:Number, pText:String, pLink:<a href="http://alivepdf.bytearray.org/alivepdf-asdoc/org/alivepdf/links/ILink.html">ILink</a> = null):void</code><p></p><p></p><p>
		 Lets you write some text with basic HTML type formatting.
		 		 </p><p><span class="label"> Parameters </span></p><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td width="20px"></td><td><code><span class="label">pHeight</span>:Number</code> — Line height, lets you specify height between each lines
		 </td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">pText</span>:String</code> — Text to write, to put a line break just add a \n in the text string
		 </td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">pLink</span>:<a href="http://alivepdf.bytearray.org/alivepdf-asdoc/org/alivepdf/links/ILink.html">ILink</a></code> (default = <code>null</code>)<code></code> — Any link, like http://www.mylink.com, will open te browser when clicked
		 </td></tr></tbody></table><p></p><br><span class="label"> Example </span><br>
		 Only a limited subset of tags are currently supported
		  <b> </b>
		  <i> </i>
		    used to create a new line
		 
		 This example shows how to add some text to the current page :
		 
		 This example shows how to add some text with a clickable link :
		 
		 </div><a name="writeText()"></a><a name="writeText(Number,String,org.alivepdf.links.ILink)"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="detailHeaderName">writeText</td><td class="detailHeaderParens">()</td><td class="detailHeaderType">method</td><td class="detailHeaderRule">&nbsp;</td></tr></tbody></table><div class="detailBody"><code> public function writeText(lineHeight:Number, text:String, link:<a href="http://alivepdf.bytearray.org/alivepdf-asdoc/org/alivepdf/links/ILink.html">ILink</a> = null):void</code><p></p><p></p><p>
		 Lets you write some text in the current page.
		 Note : writeText takes care of line return and paragraphs 
requirements. If you need HTML in top of that, use writeFlashHtmlText.
		 		 </p><p><span class="label"> Parameters </span></p><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td width="20px"></td><td><code><span class="label">lineHeight</span>:Number</code> — Line height, lets you specify height between each lines
		 </td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">text</span>:String</code> — Text to write, to put a line break just add a \n in the text string
		 </td></tr><tr><td class="paramSpacer">&nbsp;</td></tr><tr><td width="20px"></td><td><code><span class="label">link</span>:<a href="http://alivepdf.bytearray.org/alivepdf-asdoc/org/alivepdf/links/ILink.html">ILink</a></code> (default = <code>null</code>)<code></code> — Any link, like http://www.mylink.com, will open te browser when clicked
		 </td></tr></tbody></table><p></p><br><span class="label"> Example </span><br>This example shows how to add some text to the current page :
		 
		 This example shows how to add some text with a clickable link :
		 
		 </div><div class="detailSectionHeader"> Event Detail </div><a name="event:added"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="detailHeaderName">added</td><td class="detailHeaderType"> Event </td></tr></tbody></table><div class="detailBody"><span class="label">Event Object Type: </span><a href="http://alivepdf.bytearray.org/alivepdf-asdoc/org/alivepdf/events/PageEvent.html"><code>org.alivepdf.events.PageEvent</code></a><br><span class="label">PageEvent.type property = </span><a href="http://alivepdf.bytearray.org/alivepdf-asdoc/org/alivepdf/events/PageEvent.html#ADDED"><code>org.alivepdf.events.PageEvent.ADDED</code></a><br><p></p><p></p><p>
	 Dispatched when a page has been added to the PDF. The addPage() method generate this event
	 	 </p></div><a name="event:complete"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="detailHeaderName">complete</td><td class="detailHeaderType"> Event </td><td class="detailHeaderRule">&nbsp;</td></tr></tbody></table><div class="detailBody"><span class="label">Event Object Type: </span><a href="http://alivepdf.bytearray.org/alivepdf-asdoc/org/alivepdf/events/ProcessingEvent.html"><code>org.alivepdf.events.ProcessingEvent</code></a><br><span class="label">ProcessingEvent.type property = </span><a href="http://alivepdf.bytearray.org/alivepdf-asdoc/org/alivepdf/events/ProcessingEvent.html#COMPLETE"><code>org.alivepdf.events.ProcessingEvent.COMPLETE</code></a><br><p></p><p></p><p>
	 Dispatched when PDF has been generated and available. The save() method generate this event
	 	 </p></div><a name="event:pageTree"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="detailHeaderName">pageTree</td><td class="detailHeaderType"> Event </td><td class="detailHeaderRule">&nbsp;</td></tr></tbody></table><div class="detailBody"><span class="label">Event Object Type: </span><a href="http://alivepdf.bytearray.org/alivepdf-asdoc/org/alivepdf/events/ProcessingEvent.html"><code>org.alivepdf.events.ProcessingEvent</code></a><br><span class="label">ProcessingEvent.type property = </span><a href="http://alivepdf.bytearray.org/alivepdf-asdoc/org/alivepdf/events/ProcessingEvent.html#PAGE_TREE"><code>org.alivepdf.events.ProcessingEvent.PAGE_TREE</code></a><br><p></p><p></p><p>
	 Dispatched when the PDF page tree has been generated. The save() method generate this event
	 	 </p></div><a name="event:resources"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="detailHeaderName">resources</td><td class="detailHeaderType"> Event </td><td class="detailHeaderRule">&nbsp;</td></tr></tbody></table><div class="detailBody"><span class="label">Event Object Type: </span><a href="http://alivepdf.bytearray.org/alivepdf-asdoc/org/alivepdf/events/ProcessingEvent.html"><code>org.alivepdf.events.ProcessingEvent</code></a><br><span class="label">ProcessingEvent.type property = </span><a href="http://alivepdf.bytearray.org/alivepdf-asdoc/org/alivepdf/events/ProcessingEvent.html#RESOURCES"><code>org.alivepdf.events.ProcessingEvent.RESOURCES</code></a><br><p></p><p></p><p>
	 Dispatched when the required resources (fonts, images, etc.) haven 
been written into the PDF. The save() method generate this event
	 	 </p></div><a name="event:started"></a><table class="detailHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="detailHeaderName">started</td><td class="detailHeaderType"> Event </td><td class="detailHeaderRule">&nbsp;</td></tr></tbody></table><div class="detailBody"><span class="label">Event Object Type: </span><a href="http://alivepdf.bytearray.org/alivepdf-asdoc/org/alivepdf/events/ProcessingEvent.html"><code>org.alivepdf.events.ProcessingEvent</code></a><br><span class="label">ProcessingEvent.type property = </span><a href="http://alivepdf.bytearray.org/alivepdf-asdoc/org/alivepdf/events/ProcessingEvent.html#STARTED"><code>org.alivepdf.events.ProcessingEvent.STARTED</code></a><br><p></p><p></p><p>
	 Dispatched when the PDF generation has been initiated. The save() method generate this event
	 	 </p></div><br><br><hr><br><p></p><center class="copyright"><footer>alivepdf.bytearray.org - 0.1.5 RC</footer><br>Sun Jan 16 2011, 12:39 AM -08:00  </center></div></body></html>
<!--alivepdf.bytearray.org - 0.1.5 RC<br/>Sun Jan 16 2011, 12:39 AM -08:00  -->