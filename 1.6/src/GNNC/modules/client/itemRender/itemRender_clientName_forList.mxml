<?xml version="1.0" encoding="utf-8"?>
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:s="library://ns.adobe.com/flex/spark" 
				xmlns:mx="library://ns.adobe.com/flex/mx" 
				autoDrawBackground="false" 
				width="100%" height="30" 
				
				creationComplete="{__start()}" 
				rightMouseDown="{__rDown()}" 
				mouseDown="{__rDown()}"
				doubleClick="{__mDC()}"
				doubleClickEnabled="true" 

				xmlns:stage="GNNC.elements.stage.*" 
				xmlns:elements="GNNC.UI.elements.*"
				>
	<fx:Script>
		<![CDATA[
			import GNNC.data.data.gnncData;
			import GNNC.event.gnncEventGeneral;
			import GNNC.gnncEmbedBlackWhite;
			
			private function __start():void
			{
			}
			
			private function __selectComplete():void
			{
				Object(owner).dispatchEvent(new gnncEventGeneral(gnncEventGeneral._complete));
			}
			
			private function __selectIndex():void
			{
				if(Object(owner).selectedItems.length > 1)
					return;
				
				Object(owner).selectedIndex = itemIndex;
			}
			
			private function __rDown():void
			{
				__selectIndex();
				Object(owner).dispatchEvent(new gnncEventGeneral(gnncEventGeneral._rightMouseDown,data));
				if(Object(owner).hasOwnProperty('_contextMenu'))
					this.contextMenu = Object(owner)._contextMenu;
			}
			
			private function __mDown():void
			{
				__selectIndex();
				Object(owner).dispatchEvent(new gnncEventGeneral(gnncEventGeneral._mouseDown,data));
				if(Object(owner).hasOwnProperty('_contextMenu'))
					this.contextMenu = Object(owner)._contextMenu;
			}
			
			private function __mDC():void
			{
				__selectIndex();
				Object(owner).dispatchEvent(new gnncEventGeneral(gnncEventGeneral._mouseDoubleClick,data));
				if(Object(owner).hasOwnProperty('_contextMenu'))
					this.contextMenu = Object(owner)._contextMenu;
			}


		]]>
	</fx:Script>
	<fx:Declarations>
	</fx:Declarations>
	
	<s:states>
		<s:State name="normal" />
		<s:State name="hovered" />
		<s:State name="selected" />
		<s:State name="normalAndShowsCaret" />
		<s:State name="hoveredAndShowsCaret"/>
		<s:State name="selectedAndShowsCaret"/>
	</s:states>

	<s:Rect left="0" top="0" right="0" bottom="0" radiusX="3">
		<s:fill>
			<s:SolidColor color="0xFFFFFF"/>
		</s:fill>
	</s:Rect>

	<!--- LINE DIVISION LINES -->
	<s:Rect left="0" top="0" right="0" bottom="0" alpha=".8" includeIn="hoveredAndShowsCaret,hovered" radiusX="3">
		<s:fill>
			<s:SolidColor color="0xDDDDDD"/>
		</s:fill>
	</s:Rect>
	
	<!-- elements:elementBarGray left="0" top="0" right="0" bottom="0" alpha=".2" / -->
	
	<s:Rect left="0" top="0" right="0" bottom="0" includeIn="selected,selectedAndShowsCaret" >
		<s:fill>
			<s:LinearGradient rotation="90">
				<s:GradientEntry color="0x3785e2"/>
				<s:GradientEntry color="0x2170cf"/>
			</s:LinearGradient>
		</s:fill>
	</s:Rect>
	
	<!-- stage:UI_hDropShadow width="100%" height="5" alpha=".8" includeIn="selected,selectedAndShowsCaret" /-->
	<elements:elementHLine width="100%" bottom="0" alpha=".5"/>
	
	<s:HGroup left="0" right="0" top="1" bottom="1" gap="1" verticalAlign="middle" paddingLeft="4" paddingTop="1" paddingBottom="1" paddingRight="2" color.selected="0xFFFFFF" color.selectedAndShowsCaret="0xFFFFFF">
		
		<s:Image source="{ data.COMPANY == 1? gnncEmbedBlackWhite.bw_client_16_group : gnncEmbedBlackWhite.bw_client_16 }" width="16" height="16" toolTip="{'Cliente, Id: '+data.ID}"/>
		<s:Rect width="2"/>
		<s:Image source="{data.STAR>0?gnncEmbedBlackWhite.bw_favorite_16:gnncEmbedBlackWhite.bw_favorite_16_unselected}" toolTip="Favoritos"/>
		<s:Label text="{gnncData.__firstLetterUpperCase(data.NICK_NAME ? data.NICK_NAME : data.NAME)}" width="100%" verticalCenter="1" maxDisplayedLines="1" showTruncationTip="true" paddingLeft="5" paddingRight="5" fontWeight="bold" fontSize="11"
				 toolTip="{gnncData.__firstLetterUpperCase(data.NAME)}"
				 />
		
	</s:HGroup>
	
</s:ItemRenderer>