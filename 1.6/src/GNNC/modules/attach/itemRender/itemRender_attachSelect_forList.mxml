<?xml version="1.0" encoding="utf-8"?>
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:s="library://ns.adobe.com/flex/spark" 
				xmlns:mx="library://ns.adobe.com/flex/mx" 
				autoDrawBackground="false" 
				width="100%" height="25" 
				
				rightMouseDown="{__menuRight()}" xmlns:stage="GNNC.elements.stage.*"
				doubleClickEnabled="true" doubleClick="{__attachView()}" xmlns:elements="GNNC.UI.elements.*"
				>
	<!---
	
	For request Dispatch
	
	ATTACH_.addEventListener(gnncEventGeneral._view,__ATTACH_VIEW);
	ATTACH_.addEventListener(gnncEventGeneral._delete,__ATTACH_DELETE);
	ATTACH_.addEventListener(gnncEventGeneral._edit,__ATTACH_EDIT);
	ATTACH_.addEventListener(gnncEventGeneral._refresh,__ATTACH_LIST);
	
	-->
		<fx:Script>
			<![CDATA[
				import GNNC.UI.gnncPopUp.gnncPopUp;
				import GNNC.data.conn.gnncAMFPhp;
				import GNNC.data.data.gnncClipBoard;
				import GNNC.data.date.gnncDate;
				import GNNC.data.file.gnncFilesRemote;
				import GNNC.data.globals.gnncGlobalStatic;
				import GNNC.event.gnncEventGeneral;
				import GNNC.gnncEmbedExtension;
				import GNNC.modules.attach.formView.viewAttach;
				import GNNC.sqlTables.table_attach;

				private var _ATTACH:gnncAMFPhp 	= new gnncAMFPhp();
				private var _gnncPopUp:gnncPopUp = new gnncPopUp();

				private function __FILE(ext_:String):Object
				{
					var OBJ:Object = gnncEmbedExtension[ext_.toUpperCase()+'_16'];
					
					if(!OBJ)
						OBJ = gnncEmbedExtension.ALL_16;
					
					return OBJ; 
				}
				
				private function __menuRight():void
				{
					Object(owner).selectedIndex = itemIndex;

					var view:ContextMenuItem 		= new ContextMenuItem("Visualizar", 	false, true);
					view.addEventListener			(Event.SELECT,__fView);

					var copy:ContextMenuItem 		= new ContextMenuItem("Copiar URL", 	true, true);
					copy.addEventListener			(Event.SELECT,__fCopyUrl);
					
					var cm:ContextMenu 				= new ContextMenu();
					cm.hideBuiltInItems				();
					cm.customItems 					= [view,copy];
					
					this.contextMenu 				= cm;
				}
				
				private function __dispatche(send_:String):void
				{
					Object(owner).dispatchEvent(new gnncEventGeneral(send_,data));
				}

				private function __fView(event:Event):void
				{
					__attachView();
					__dispatche(gnncEventGeneral._view);
				}

				private function __fCopyUrl(event:Event):void
				{
					if(!data.ID)
						return;
					
					gnncClipBoard.__copyText(data.FILE_HTTP+'ATTACH/'+gnncGlobalStatic._dataBase.toUpperCase()+'/'+data.FILE_LINK+'?'+Math.random());
					__dispatche(gnncEventGeneral._copy);
				}

				private function __attachView():void
				{
					var _TABLE:table_attach = new table_attach();
					_TABLE.ID	 			= data.ID;
					_TABLE.NAME 			= data.NAME;
					_TABLE.FILE_HTTP		= data.FILE_HTTP;
					_TABLE.FILE_LINK		= data.FILE_LINK;
					_TABLE.URL_LINK		= data.URL_LINK;
					_TABLE.SIZE				= data.SIZE;
					_TABLE.EXTENSION		= data.EXTENSION;
					
					var _PAGE:viewAttach 	= new viewAttach();
					_PAGE._TABLE_ATTACH 	= _TABLE;
					new gnncPopUp().__creation(_PAGE);
				}
				
			]]>
		</fx:Script>
		
		<s:states>
			<s:State name="normal" />
			<s:State name="hovered" />
			<s:State name="selected" />
			<s:State name="normalAndShowsCaret"/>
			<s:State name="hoveredAndShowsCaret"/>
			<s:State name="selectedAndShowsCaret"/>
		</s:states>
		
		<s:Rect left="0" top="0" right="0" bottom="0" includeIn="hoveredAndShowsCaret,hovered" radiusX="4">
			<s:fill>
				<s:SolidColor color="0xDDDDDD"/>
			</s:fill>
		</s:Rect>
		
		<s:Rect left="0" top="0" right="0" bottom="0" includeIn="selected,selectedAndShowsCaret" radiusX="4">
			<s:fill>
				<s:LinearGradient rotation="90">
					<s:GradientEntry color="0x3785e2"/>
					<s:GradientEntry color="0x2170cf"/>
				</s:LinearGradient>
			</s:fill>
		</s:Rect>
		
		<s:HGroup left="5" top="0" right="5" bottom="0" gap="4" verticalAlign="middle" color.selected="0xFFFFFF" color.selectedAndShowsCaret="0xFFFFFF" fontWeight.selected="bold" fontWeight.selectedAndShowsCaret="bold" >
			<s:Image source="{__FILE(data.EXTENSION)}" width="16" toolTip="`{'Arquivo, ID:'+data.ID}" />
			<s:Label text="{data.NAME}" showTruncationTip="true" maxDisplayedLines="1" fontSize="11" width="100%" paddingTop="1" paddingLeft="5" />
			<s:Label text="{String(data.EXTENSION).toLowerCase()}" maxDisplayedLines="1" showTruncationTip="true" fontSize="11" paddingTop="1" width="40" fontWeight="bold" />
			<s:Label text="{gnncFilesRemote.__bytes2Legend(data.SIZE)}" maxDisplayedLines="1" showTruncationTip="true" fontSize="11" paddingTop="1" width="65" fontWeight="bold" />
			<s:Label text="{gnncDate.__date2Legend(data.DATE)}" maxDisplayedLines="1" showTruncationTip="true" fontSize="10" paddingTop="1" width="80" />
		</s:HGroup>
	
		<elements:elementHLine alpha=".2" bottom="0"/>
	
</s:ItemRenderer>