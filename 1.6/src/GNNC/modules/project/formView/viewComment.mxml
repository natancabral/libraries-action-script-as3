<?xml version="1.0" encoding="utf-8"?>
<s:Module 
	xmlns:fx="http://ns.adobe.com/mxml/2009" 
	xmlns:s="library://ns.adobe.com/flex/spark" 
	xmlns:mx="library://ns.adobe.com/flex/mx" 
	
	width="500" height="500"
	
	creationComplete="{__start()}" 
	
	xmlns:select="GNNC.elements.component.select.*" 
	xmlns:stage="GNNC.elements.stage.*" 
	xmlns:elements="GNNC.UI.elements.*" 
	xmlns:gnncTextEdit="GNNC.UI.gnncTextEdit.*" 
	xmlns:list="GNNC.elements.component.list.*" 
	>
	<fx:Script>
		<![CDATA[
			import GNNC.UI.gnncAlert.gnncAlert;
			import GNNC.UI.gnncPopUp.gnncPopUp;
			import GNNC.data.conn.gnncAMFPhp;
			import GNNC.data.data.gnncData;
			import GNNC.data.date.gnncDate;
			import GNNC.data.globals.gnncGlobalStatic;
			import GNNC.data.sql.gnncSql;
			import GNNC.event.gnncEventGeneral;
			import GNNC.gnncEmbedBlackWhite;
			import GNNC.gnncEmbedImage;
			import GNNC.keyboard.gnncKeyboard;
			import GNNC.sqlTables.table_comment;
			import GNNC.sqlTables.table_job;
			
			import mx.graphics.SolidColor;
			import mx.graphics.SolidColorStroke;
			import mx.rpc.Fault;
			import mx.rpc.events.ResultEvent;
			
			private var _connComment:gnncAMFPhp 		= new gnncAMFPhp();
			public  var _tableComment:table_comment 	= new table_comment();
			private var _gnncPopUp:gnncPopUp = new gnncPopUp();
			
			private function __start():void
			{
				attach_.addEventListener(gnncEventGeneral._refresh,__attachRefresh);
				__checkEdit();
			}
			
			private function __checkEdit():void
			{
				panelCenter_.enabled = false;
				buttomBar_.enabled = false;
				
				if(_tableComment != null){
					if(Number(_tableComment.ID)>0){
						//_gnncPopUp.__loading	('Recolhendo dados...');
						
						var colums:Array 	= 
							[
								"*",
								"coalesce(( select j.TITLE from dbd_job j where j.ID = dbd_comment.ID_JOB limit 1 ),'') as TITLE ",
								"coalesce(( select (select v.NAME from dbd_client v where v.ID like a.ID_CLIENT) from dbd_login a where a.ID like dbd_comment.ID_USER limit 1 ),'') NAME_USER ",
								"coalesce(( select a.FILE_LINK from dbd_attach a WHERE a.MIX = 'CLIENT_PHOTO' and a.ID_MIX = dbd_comment.ID_CLIENT_INSERT AND (a.EXTENSION = 'jpg' or a.EXTENSION = 'jpeg' or a.EXTENSION = 'png' or a.EXTENSION = 'gif') ORDER BY a.ORDER_ITEM asc,a.ID desc LIMIT 0,1	),'')  ATTACH_CLIENT"
							];
						
						var t:table_comment = new table_comment();
						t.ID = _tableComment.ID;
						t.VISIBLE = 0;
						
						var _sql:String = new gnncSql().__SELECT(t,false,colums);
						_connComment.__sql(_sql,'','',__fResult,__fFault);
					}
				} 
				else {
					__close();
				}
			}
			
			protected function __fFault(e:*):void
			{
				__close();
			}
			
			protected function __fResult(e:*):void
			{
				if(_connComment.DATA_ROWS==0){
					__close();
					return;
				}
				
				var o:Object = _connComment.DATA_ARR.getItemAt(0);
				
				_tableComment.ID_CLIENT     = o.ID_CLIENT;
				_tableComment.ID_PROJECT    = o.ID_PROJECT;
				_tableComment.ID_JOB        = o.ID_JOB;
				MESSAGE_.text				= o.MESSAGE;
				nameUser_.text				= o.NAME_USER?gnncData.__firstLetterUpperCase(o.NAME_USER):'Usuário não encontrado';
				photo_.source				= __location(o);
				date_.text					= gnncDate.__relativeDateFromNow(o.DATE);

				if(String(o.TITLE).length>2 && o.TITLE){
					job_.label = String(o.TITLE) ;
					job_.enabled = true;
				}else{
					job_.label = 'Job (tarefa) não encontrada' ;
					job_.enabled = false;
				}
				
				__attachRefresh();
				//_gnncPopUp.__close();
				panelCenter_.enabled = true;
				buttomBar_.enabled = true;
			}
			
			private function __close():void
			{
				_gnncPopUp.__close();
				new gnncPopUp().__close(this);
			}
			
			protected function __location(data_:Object):Object
			{
				if(String(data_.ATTACH_CLIENT).length>5)
					return gnncGlobalStatic._httpHost+'ATTACH/'+String(gnncGlobalStatic._dataBase).toUpperCase()+'/'+data_.ATTACH_CLIENT;
				else
					return null;
			}
			
			private function openView():void
			{
				if(_tableComment.ID_JOB==0 && job_.label==''){
					job_.enabled = false;
					return;
				}
				
				var t:table_job = new table_job();
				t.ID = _tableComment.ID_JOB;
				
				var p:viewJobCompact = new viewJobCompact();
				p._tableJob = t;
				
				new gnncPopUp().__creation(p,true,false,removePopUp);
				function removePopUp(e:*):void
				{
				}
			}

			private function __attachRefresh(e:gnncEventGeneral=null):void
			{
				attach_._connList = new gnncAMFPhp();
				attach_._connList._allowGlobalLoading 	= false;
				attach_._connList._allowGlobalError		= false;
				
				//attach_._sqlShow = true;
				attach_.__selectWhere(_tableComment.ID,['ID_MIX']," MIX = 'COMMENT' ",false);
			}

			
		]]>
	</fx:Script>
	<fx:Declarations>
	</fx:Declarations>
	
	<elements:elementStageBox />
	
	<mx:ViewStack id="panelCenter_" top="10" left="10" right="10" bottom="42" enabled="false">
		<s:NavigatorContent label="" width="100%" height="100%" creationPolicy="all">
			<s:layout>
				<s:VerticalLayout gap="1" paddingTop="10" paddingLeft="10" paddingRight="10" paddingBottom="10"/>
			</s:layout>

			<s:HGroup gap="10">
				<s:Group width="60" height="60" >
					<s:Rect width="100%" height="100%" fill="{new SolidColor(0xFFFFFF)}" />
					<s:Rect width="100%" height="100%" stroke="{new SolidColorStroke(0x2170cf,.4)}" alpha=".2" />
					<s:Image id="photo_" source="{null}" left="5" top="5" right="5" bottom="5" smooth="true" scaleMode="zoom" smoothingQuality="high" />
				</s:Group>
				<s:VGroup width="100%" paddingTop="5">
					<s:Label id="nameUser_" showTruncationTip="true" maxDisplayedLines="1" width="100%" fontSize="12" fontWeight="bold"/>
					<s:Label id="date_" showTruncationTip="true" maxDisplayedLines="1" width="100%" fontSize="11" fontWeight="normal"/>
				</s:VGroup>
			</s:HGroup>
			
			<elements:elementHLine height="25"/>
			
			<s:Group width="100%" height="100%">
				<s:TextArea id="MESSAGE_" width="100%" height="100%" fontSize="14" borderVisible="false" focusAlpha="0" editable="false" contentBackgroundAlpha="0"
							lineHeight="19"
							/>
				<!--s:Rect left="0" top="0" right="0" height="5" radiusX="0" radiusY="0">	
					<s:fill>
						<s:LinearGradient rotation="83">
							<s:GradientEntry color="0x3785e2" />
							<s:GradientEntry color="0x2170cf" />
						</s:LinearGradient>
					</s:fill>
				</s:Rect-->	
			</s:Group>
			
			<elements:elementHLine height="3"/>
			
			<elements:elementLabelDropShadow text="ARQUIVOS ANEXADOS NO COMENTÁRIO" fontSize="13" height="25"  fontWeight="normal" paddingLeft="5"/>
			<list:conList_attach id="attach_" width="100%" height="90" bottom="0" _backgroundAlpha="0" _borderVisible="false" />

			
			<s:Button id="job_" label="Job" width="100%" height="30" skinClass="GNNC.skin.button.skin_buttonTextLeft" click="{openView()}" icon="{gnncEmbedBlackWhite.bw_project_job_16}"/>

			<!-- s:HGroup width="100%" height="30" gap="1" enabled="false">
				<s:TextArea id="RETURN_" width="100%" height="30" fontSize="12" focusAlpha="0" 
							paddingBottom="10" paddingLeft="10" paddingRight="10" paddingTop="10"/>
				<s:Button id="commentBtn_" height="30" icon="{gnncEmbedBlackWhite.bw_comment_16_new}" fontWeight="bold" label="Responder" click="{/*__commentNew()*/}" keyDown="{/*if(gnncKeyboard.__ENTER(event))__commentNew()*/}" />
				<s:ToggleButton id="commentBtnEnter_" width="30" height="30" icon="{gnncEmbedImage.TEXT_ENTER_16}" fontWeight="bold" label="Permitir 'Enter' para enviar..." selected="true" />
			</s:HGroup -->
			
		</s:NavigatorContent>
	</mx:ViewStack>
	
	<s:Group id="buttomBar_" left="0" bottom="0" right="0" enabled="false">
		<s:Rect width="100%" height="34">
			<s:fill>
				<s:SolidColor color="0xeeeeee" />
			</s:fill>
		</s:Rect>		
		<s:HGroup width="100%" height="34" gap="2" verticalAlign="middle" paddingLeft="5" paddingRight="5" >
			<s:Rect width="100%" />
			<s:Button icon="{gnncEmbedBlackWhite.app_close_16_clean}" label="Fechar" click="{__close()}" skinClass="GNNC.skin.button.skin_buttonLink" />	
		</s:HGroup>
	</s:Group>
	
	<s:Button top="10" right="10" click="{__close()}" width="10" height="10" tabFocusEnabled="false" toolTip="Fechar" />
	
</s:Module>