<?xml version="1.0" encoding="utf-8"?>
<s:Module xmlns:fx="http://ns.adobe.com/mxml/2009" 
		  xmlns:s="library://ns.adobe.com/flex/spark" 
		  xmlns:mx="library://ns.adobe.com/flex/mx" 
		  
		  width="750" height="400"
		  
		  xmlns:STAGE="gNial.ELEMENTS.*"
		  xmlns:stage="GNNC.elements.stage.*" 
		  xmlns:elements="GNNC.UI.elements.*" 
		  xmlns:select="GNNC.elements.component.select.*" 
		  creationComplete="{__start()}" 
		  >
	<fx:Declarations>
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import GNNC.UI.gnncAlert.gnncAlert;
			import GNNC.UI.gnncPopUp.gnncPopUp;
			import GNNC.data.data.gnncData;
			import GNNC.data.data.gnncDataArrayCollection;
			import GNNC.data.globals.gnncGlobalStatic;
			import GNNC.data.sql.gnncSql;
			import GNNC.data.conn.gnncAMFPhp;
			import GNNC.elements.component.select.report.gnncFileReport_series;
			import GNNC.gnncEmbedBlackWhite;
			import GNNC.gnncEmbedImage;
			import GNNC.keyboard.gnncKeyboard;
			import GNNC.sqlTables.table_web_menu_location;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.CloseEvent;
			
			//[Bindable] private var _gnncGlobal:gnncGlobalStatic 		= new gnncGlobalStatic(true);
			[Bindable] public var _tableClass:Object 					= null;
			
			public  var _connList:gnncAMFPhp 							= new gnncAMFPhp();
			private var _connExec:gnncAMFPhp 							= new gnncAMFPhp();
			private var _gnncPopUp:gnncPopUp 							= new gnncPopUp();
			
			private var _MIX:String 									= '';
			public  var _change:Boolean 								= false;
			
			private function __start():void
			{
				
				this.addEventListener(KeyboardEvent.KEY_UP,
					function(event:KeyboardEvent):void
					{
						if(gnncKeyboard.__ENTER(event))
						{
							focusManager.getNextFocusManagerComponent().setFocus();
							focusManager.getNextFocusManagerComponent().drawFocus(true);
							
							focusManager.showFocus();
							focusManager.getFocus();
							focusManager.activate();
						}
						if(gnncKeyboard.__CONTROL_ENTER(event)) __save();
					}
				);
				
				__config();
				callLater(__firstInput);
			}
			
			private function __config():void 
			{
				_tableClass = new table_web_menu_location();
				_MIX		= _tableClass.MIX;
				
				callLater(__list);
			}
			
			private function __firstInput():void 
			{ 
				this.NAME_.setFocus();
			}
			
			private function __close():void
			{
				new gnncPopUp().__close(this);
			}
			
			private function __documentPdf():void
			{
				var _object:Object 	= new Object();
				_object['arrayC'] 	= new ArrayCollection(list_.dataProvider.toArray());
				
				new gnncFileReport_series().__create(_object);
			}
			
			public function __list(fResult_:Function=null,fFault_:Function=null):void
			{
				_gnncPopUp.__loading();
				
				function __fResult(e:*):void
				{ 
					list_.dataProvider = new gnncDataArrayCollection().__hierarchy(new gnncDataArrayCollection().__filter(_connList.DATA_ARR,'MIX',_MIX,false));
					_gnncPopUp.__close();
					
					if(fResult_!=null)
						fResult_.call();
				};
				
				function __fFault (e:*):void
				{ 
					_gnncPopUp.__close();
					
					if(fFault_!=null)
						fFault_.call();
				};
				
				var _sql:String = new gnncSql().__SELECT(_tableClass,false,null,null,null,null,null,['NAME'],false);
				
				//new gnncAlert().__alert(_sql);
				
				_connList.__sql(_sql,'','',__fResult,__fFault);
			}
			
			private function __edit():void
			{
				var OBJ:Object					= list_.selectedItem;
				var IDXDATP:int 				= list_.selectedIndex;
				var IDXARRA:int 				= _connList.DATA_ARR.getItemIndex(OBJ);
				
				if(IDXDATP < 0)
				{
					return;
				}
				
				panelLeft_.enabled = false;
				
				btnSave_.label 					= 'Salvar Edição (Ctr+Enter)';
				btnSave_.setStyle				('icon',gnncEmbedBlackWhite.bw_edit_16);
				
				_tableClass.ID 					= OBJ.ID;
				NAME_.text						= OBJ.NAME;
				ACTIVE_.selected			 	= !OBJ.ACTIVE ? false : true;
				ID_FATHER_.selectedIndex		= new gnncDataArrayCollection().__getIndex(new ArrayCollection(list_.dataProvider.toArray()),'ID',OBJ.ID_FATHER);
				_tableClass.LEVEL				= ID_FATHER_.selectedIndex > -1?uint(ID_FATHER_.selectedItem.LEVEL+1):0;
				COLOR_.value					= OBJ.COLOR;
				
				NAME_.setFocus();
				
			}
			
			private function __delete():void
			{
				var OBJ:Object					= list_.selectedItem;
				var IDXDATP:int 				= list_.selectedIndex;
				var IDXARRA:int 				= _connList.DATA_ARR.getItemIndex(OBJ);
				
				if(IDXDATP < 0)
					return;
				
				Alert.show("Você deseja excluir esse item definitivamente?",'Excluir...',3,null,__deleteConfirm);
				
			}
			
			private function __deleteConfirm(event:CloseEvent):void
			{
				if(event.detail != Alert.YES)
					return;
				
				_gnncPopUp.__loading();
				
				var OBJ:Object					= list_.selectedItem;
				var IDXDATP:int 				= list_.selectedIndex;
				var IDXARRA:int 				= _connList.DATA_ARR.getItemIndex(OBJ);
				
				function __fResult(e:*):void
				{ 
					_change = true;
					_gnncPopUp.__close();
					
					_connList.DATA_ARR.removeItemAt(IDXARRA);
					list_.dataProvider.removeItemAt(IDXDATP);
				};
				
				function __fFault(e:*):void
				{ 
					_gnncPopUp.__close();
				};
				
				var _sql:String = new gnncSql().__DELETE(_tableClass,[OBJ.ID],true);
				
				_sql += gnncGlobalStatic._breakSql+" UPDATE dbd_"+String(_tableClass._TABLE).toLowerCase()+" SET ID_FATHER = '"+OBJ.ID_FATHER+"', LEVEL = '"+OBJ.LEVEL+"' WHERE ID_FATHER like '"+OBJ.ID+"'";
				
				//new gnncAlert().__alert(_sql);
				
				_connExec.__sql(_sql,'','',__fResult,__fFault);
			}
			
			private function __save():void
			{
				if(!gnncData.__trimText(NAME_.text))
					return;
				
				if(ID_FATHER_.selectedIndex>-1)
					if(_tableClass.ID && ID_FATHER_.selectedItem.ID == _tableClass.ID)
					{
						new gnncAlert().__error('Escolha outra sub-categoria.');
						return;
					}
				
				_gnncPopUp.__loading();
				
				var _table:Object 				= new Object();
				
				_table._TABLE 					= _tableClass._TABLE;
				
				_table.ID 						= _tableClass.ID;
				_table.ID_FATHER				= ID_FATHER_.selectedIndex > -1?ID_FATHER_.selectedItem.ID:0;
				_table.LEVEL					= ID_FATHER_.selectedIndex > -1?uint(ID_FATHER_.selectedItem.LEVEL+1):0;
				
				_table.MIX						= _MIX;
				
				_table.NAME						= gnncData.__scapeString(NAME_.text);
				_table.DESCRIPTION				= '';//DESCRIPTION_.text;
				_table.COLOR					= COLOR_.value?COLOR_.value.toString():'';
				
				_table.ACTIVE					= ACTIVE_.selected ? 1 : 0;
				_table.VISIBLE					= 1;
				_table.CONTROL					= 0;
				
				var _sql:String	= _sql = new gnncSql().__INSERT(_table,true,true,true);
				
				if(_tableClass.hasOwnProperty('ID'))
					if(_tableClass.ID)
						_sql += gnncGlobalStatic._breakSql+" UPDATE dbd_"+String(_tableClass._TABLE).toLowerCase()+" SET LEVEL = '"+uint(_table.LEVEL+1)+"' WHERE ID_FATHER like '"+_table.ID+"'";
				
				//new gnncAlert().__alert(_sql);
				
				_connExec.__sql(_sql,'','',__fResult,__fFault);
				
				function __fFault(event:*):void
				{
					_gnncPopUp.__close();
				}
				
				function __fResult(event:*):void
				{
					panelLeft_.enabled 				= true;
					_change							= true;
					_gnncPopUp.__close();
					
					if(btnAfterClose_.selected)
					{
						__close();
						return;
					}
					
					btnSave_.label 					= 'Cadastrar (Ctrl+Enter)';
					btnSave_.setStyle				('icon',gnncEmbedBlackWhite.bw_new_16);
					
					ACTIVE_.selected 				= false;
					COLOR_.value 					= 'FFFFFF';
					NAME_.text 						= '';
					NAME_.setFocus					();
					
					_tableClass.ID 					= 0;
					_tableClass.LEVEL 				= 0;
					
					__list(); //Refresh All
				}
				
			}
			
			private function __clearSelections():void
			{
				list_.selectedIndex = ID_FATHER_.selectedIndex = -1;
			}
			
			private function __selectedFather(inverse_:Boolean=false):void
			{
				if(list_.selectedIndex != ID_FATHER_.selectedIndex)
					if(inverse_)
						list_.selectedIndex = ID_FATHER_.selectedIndex;
					else
						ID_FATHER_.selectedIndex = list_.selectedIndex;
			}
			
			
		]]>
	</fx:Script>
	
	<elements:elementStageBoxPopUp />
	
	<s:HGroup left="20" right="20" top="20" height="30" verticalAlign="middle" paddingRight="0" paddingLeft="0">
		<s:TabBar dataProvider="{panelCenter_}" height="30"/>
	</s:HGroup>
	
	<mx:ViewStack id="panelCenter_" left="20" right="20" top="55" bottom="52" >
		<s:NavigatorContent label="BÁSICO" width="100%" height="100%">
			<s:layout>
				<s:HorizontalLayout gap="5" />
			</s:layout>
			
			<s:Form width="100%" height="100%" fontSize="11" fontWeight="normal">
				<s:layout>
					<s:FormLayout gap="-10" paddingBottom="0" paddingLeft="0" paddingRight="0" paddingTop="0" />
				</s:layout>
				<s:FormItem label="Sub-Categoria de:">
					<s:DropDownList id="ID_FATHER_" width="100%" height="25" labelField="NAME" prompt="Selecione..." dataProvider="{list_.dataProvider}" change="{__selectedFather(true)}" />
					<s:Button icon="{gnncEmbedBlackWhite.bw_clear_14_selection}" width="25" toolTip="Limpar seleção" click="{ID_FATHER_.selectedIndex=-1;list_.selectedIndex=-1;}" skinClass="GNNC.skin.button.skin_buttonLink" />
				</s:FormItem>
				<s:FormItem label="Nome" required="true">
					<!-- edit contentBackgroundColor="{_tableClass.ID?0xffffcc:0xFFFFFF}"  -->
					<s:TextInput id="NAME_" width="100%" height="30" fontSize="15" paddingLeft="5" prompt="Nome ou Título" />
				</s:FormItem>
				<s:FormItem label="">
					<s:CheckBox id="ACTIVE_" label="Este item será um título? Se sim torná-lo desabilitado." selected="false" height="25"/>
				</s:FormItem>
				<s:FormItem label="Cor">
					<select:conColor id="COLOR_" width="100%" _widthBox="20" _heightBox="20" />
				</s:FormItem>
			</s:Form>
			
			<s:Group id="panelLeft_" width="230" height="100%" top="15">
				<elements:elementBarGray radiusX="4" width="100%" height="100%" alpha=".5"/>
				<s:VGroup width="100%" height="100%" paddingBottom="10" paddingLeft="10" paddingRight="10" paddingTop="10" gap="1" top="0">
					<s:List id="list_" width="100%" height="100%" borderVisible="false" labelField="NAME" contentBackgroundAlpha="0" horizontalScrollPolicy="off" 
							change="{__selectedFather()}" itemRenderer="GNNC.skin.dropDownList.itemRender.itemRender_hierarchy_forList"
							>
						<s:layout>
							<s:VerticalLayout rowHeight="25" gap="1" />
						</s:layout>
					</s:List>
					<elements:elementHLine height="15"/>
					<s:HGroup width="100%" gap="1">
						<s:Button toolTip="Atualizar" 	icon="{gnncEmbedBlackWhite.bw_refresh_16}"  width="100%" click="{__list()}"/>
						<s:Button label="Editar" 		icon="{gnncEmbedBlackWhite.bw_edit_16}" 	enabled="{list_.selectedIndex>-1?true:false}" click="{__edit()}"/>
						<s:Button label="Excluir" 		icon="{gnncEmbedBlackWhite.bw_delete_16}" 	enabled="{list_.selectedIndex>-1?true:false}" click="{__delete()}"/>
					</s:HGroup>
				</s:VGroup>
			</s:Group>
		</s:NavigatorContent>
	</mx:ViewStack>
	
	<s:HGroup left="1" right="1" bottom="1" height="34" gap="2" paddingLeft="5" paddingRight="5" verticalAlign="middle">
		<s:Button icon="{gnncEmbedBlackWhite.bw_document_16_pdf}" label="Documento" click="{__documentPdf()}" focusEnabled="false" />
		<s:Rect width="100%" />
		<s:ToggleButton id="btnAfterClose_" icon="{btnAfterClose_.selected?gnncEmbedBlackWhite.check_16_green_ok:gnncEmbedBlackWhite.check_16_green}" label="Fechar ao finalizar" selected="true" />
		<s:Button id="btnSave_" icon="{gnncEmbedBlackWhite.bw_new_16}" label="Cadastrar (Ctrl+Enter)" click="{__save()}" fontWeight="bold" enabled="{NAME_.text?true:false}" height="25" >
			<s:keyUp>
				<![CDATA[
				if(gnncKeyboard.__ENTER(event) && !gnncKeyboard.__CONTROL_ENTER(event)) __save()
				]]>
			</s:keyUp>
		</s:Button>
		<s:Button icon="{gnncEmbedBlackWhite.app_close_16_clean}" label="Fechar" click="{__close()}" skinClass="GNNC.skin.button.skin_buttonLink" />	
	</s:HGroup>
	
	<s:Button top="4" right="4" click="{__close()}" width="10" height="10" tabFocusEnabled="false" toolTip="Fechar" />
	
</s:Module>