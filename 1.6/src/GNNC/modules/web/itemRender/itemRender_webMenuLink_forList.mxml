<?xml version="1.0" encoding="utf-8"?>
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:s="library://ns.adobe.com/flex/spark" 
				xmlns:mx="library://ns.adobe.com/flex/mx" 
				autoDrawBackground="false" width="100%" height="30"
				
				click			= "{__click()}"
				mouseDown		= "{__mouseDown()}"
				mouseUp			= "{__mouseUp()}"
				rightMouseDown	= "{__rightClick()}" xmlns:stage="GNNC.elements.stage.*" xmlns:elements="GNNC.UI.elements.*"
				
				>
	
	<fx:Script>
		<![CDATA[
			import GNNC.event.gnncEventGeneral;
			import GNNC.gnncEmbedBlackWhite;
			import GNNC.gnncEmbedImage;
			
			import spark.utils.DataItem;
			
			private function __click():void
			{
				Object(owner).dispatchEvent(new Event('MOUSE_CLICK'));
			}
			
			private function __mouseDown():void
			{
				Object(owner).dispatchEvent(new Event('MOUSE_DOWN'));
			}
			
			private function __mouseUp():void
			{
				Object(owner).dispatchEvent(new Event('MOUSE_UP'));
			}
			
			private function __rightClick():void
			{
				var id:ContextMenuItem 		= new ContextMenuItem("Id: "+data.ID, false, false);
				//view.addEventListener			(Event.SELECT,__f);
				
				var cm:ContextMenu 				= new ContextMenu();
				cm.hideBuiltInItems				();
				cm.customItems 					= [id];
				
				this.contextMenu 				= cm;
			}

			private function __visiblePrev(d:Object):Boolean
			{
				return !d.hasOwnProperty('LEVEL')?false:d.LEVEL==0?false:true;
			}
			
			private function __visibleNext(d:Object):Boolean
			{
				if(!d.hasOwnProperty('LEVEL'))
					return false;

				if(!itemIndex)
					return false;

				if(d.LEVEL > Object(owner).dataProvider.getItemAt(itemIndex-1).LEVEL )
					return false;
				
				return true;
			}
			
			private function __nextLevel():void
			{
				if(data.LEVEL < 1)
					Object(owner).dispatchEvent(new gnncEventGeneral(gnncEventGeneral._hierarchyNextLevel,data));
			}

			private function __prevLevel():void
			{
				Object(owner).dispatchEvent(new gnncEventGeneral(gnncEventGeneral._hierarchyPrevLevel,data));
			}

			private function __setHome():void
			{
				Object(owner).dispatchEvent(new gnncEventGeneral("setHome",data));
			}

			private function __setBold():void
			{
				Object(owner).dispatchEvent(new gnncEventGeneral("setBold",data));
			}
			
			private function __setTitle():void
			{
				Object(owner).dispatchEvent(new gnncEventGeneral("setTitle",data));
			}
			
		]]>	
	</fx:Script>
	
	<s:states>
		<s:State name="normal" />
		<s:State name="hovered" />
		<s:State name="selected" />
		<s:State name="normalAndShowsCaret"/>
		<s:State name="hoveredAndShowsCaret"/>
		<s:State name="selectedAndShowsCaret"/>
	</s:states>


	<s:Rect left="{!data.hasOwnProperty('LEVEL')?0:data.LEVEL==0?0:data.LEVEL==1?5:data.LEVEL==2?10:data.LEVEL==3?15:data.LEVEL==4?20:25}" top="0" right="0" bottom="0" radiusX="3">
		<s:fill>
			<s:SolidColor color="0xFFFFFF"
						  alpha="{!data.hasOwnProperty('LEVEL')?1:data.LEVEL==0?1:data.LEVEL==1?0.5:data.LEVEL==2?0.2:data.LEVEL==3?0.2:data.LEVEL==4?0.2:0.2}"
						  />
		</s:fill>
	</s:Rect>
	
	<elements:elementHLine bottom="0" left="0" right="0" alpha=".7"/>	

	<s:Rect  left="{!data.hasOwnProperty('LEVEL')?0:data.LEVEL==0?0:data.LEVEL==1?5:data.LEVEL==2?10:data.LEVEL==3?15:data.LEVEL==4?20:25}" top="0" right="0" bottom="0" includeIn="hoveredAndShowsCaret,hovered" radiusX="3">
		<s:fill>
			<s:LinearGradient rotation="90">
				<s:GradientEntry color="0xFAFAFA" />
				<s:GradientEntry color="0xEDEDED" />
			</s:LinearGradient>
		</s:fill>
	</s:Rect>
	
	<s:Rect  left="{!data.hasOwnProperty('LEVEL')?0:data.LEVEL==0?0:data.LEVEL==1?5:data.LEVEL==2?10:data.LEVEL==3?15:data.LEVEL==4?20:25}" top="0" right="0" bottom="0" includeIn="selected,selectedAndShowsCaret" radiusX="3">
		<s:fill>
			<s:LinearGradient rotation="90">
				<s:GradientEntry color="0x3785e2"/>
				<s:GradientEntry color="0x2170cf"/>
			</s:LinearGradient>
		</s:fill>
	</s:Rect>
	
	<s:HGroup left="{!data.hasOwnProperty('LEVEL')?0:data.LEVEL==0?0:data.LEVEL==1?5:data.LEVEL==2?10:data.LEVEL==3?15:data.LEVEL==4?20:25}" right="30" height="30" verticalAlign="middle" gap="1" 
			  paddingLeft="2">
		<s:VGroup width="100%" height="30" gap="-1" color.selected="0xFFFFFF" color.selectedAndShowsCaret="0xFFFFFF" 
				  paddingLeft="4" paddingRight="4" paddingTop="5" paddingBottom="3">
			<s:Label text="{/*data.ID*/data.NAME}" fontSize="11" paddingLeft="2" 
					 color="0x222222" color.selected="0xFFFFFF" color.selectedAndShowsCaret="0xFFFFFF" verticalAlign="middle"
					 showTruncationTip="true" maxDisplayedLines="1" 
					 width="100%" fontWeight="bold"					 
					 />
			<s:Label text="{/*data.ID_FATHER*/data.URL_PERSONAL ? data.URL_PERSONAL : data.NAME_FRIENDLY}" paddingLeft="2" 
					 color="0xAAAAAA" color.selected="0xEEEEEE" color.selectedAndShowsCaret="0xEEEEEE" verticalAlign="middle"
					 showTruncationTip="true" maxDisplayedLines="1" 
					 width="100%"
					 />
		</s:VGroup>
	</s:HGroup>
	
	<s:HGroup gap="-1" height="22" right="5" verticalCenter="0" includeIn="selectedAndShowsCaret,selected" visible="{!itemIndex?false:true}">
		
		<s:ToggleButton icon="{gnncEmbedBlackWhite.bw_text_16_main}" width="16" height="22" toolTip="Página Principal"
						click="{__setHome()}" selected="{data.SET_HOME==1?true:false}" />

		<s:ToggleButton icon="{gnncEmbedBlackWhite.bw_text_16_bold}" width="16" height="22" toolTip="Destaque em negrito."
						click="{__setBold()}" selected="{data.SET_BOLD==1?true:false}" /> 
		
		<s:ToggleButton icon="{gnncEmbedBlackWhite.bw_text_16_header}" label="T" width="16" height="22" toolTip="Tornar um cabeçalho no menu, um título." 
						click="{__setTitle()}" selected="{data.SET_HEADER==1?true:false}" />

		<s:Button icon="{gnncEmbedImage.DIRECTION_LEFT_16}" 	width="16" height="22" toolTip="Volta 1 nível, ficará fora do link acima." 
				  enabled="{__visiblePrev(data)}" click="{__prevLevel()}" />
		
		<s:Button icon="{gnncEmbedImage.DIRECTION_RIGHT_16}" 	width="16" height="22" toolTip="Acrescenta 1 nível, ficará dentro do link acima. "
				  enabled="{__visibleNext(data)}" click="{__nextLevel()}" />
		
	</s:HGroup>

	<s:Group width="22" height="22" right="1" verticalCenter="0" excludeFrom="selectedAndShowsCaret,selected" >
		<s:Label text="{data.ROWS_WEB_PAGE}" fontSize="11" toolTip="Quantidade de Páginas"
				 color="0x444444" color.selected="0xEEEEEE" color.selectedAndShowsCaret="0xEEEEEE" verticalAlign="middle"
				 showTruncationTip="true" maxDisplayedLines="1" 
				 width="22" height="22" fontWeight="normal" textAlign="center"
				 />
	</s:Group>
	
	
	
	
	<elements:elementVLine left="{!data.hasOwnProperty('LEVEL')?0:data.LEVEL==0?0:data.LEVEL==1?5:data.LEVEL==2?10:data.LEVEL==3?15:data.LEVEL==4?20:25}" width="1" color="0xBBBBBB"
					visible="{!data.hasOwnProperty('LEVEL')?false:data.LEVEL==0?false:true}"
					/>	
	
	<s:Rect left="{!data.hasOwnProperty('LEVEL')?0:data.LEVEL==0?0:data.LEVEL==1?2:data.LEVEL==2?7:data.LEVEL==3?12:data.LEVEL==4?17:22}" 
			visible="{!data.hasOwnProperty('LEVEL')?false:data.LEVEL==0?false:true}"
			width="8" height="8" radiusX="5" verticalCenter="0" >
		<s:fill>
			<s:SolidColor color="0xFFFFFF"/>
		</s:fill>
	</s:Rect>

	<s:Label left="{!data.hasOwnProperty('LEVEL')?0:data.LEVEL==0?0:data.LEVEL==1?4:data.LEVEL==2?9:data.LEVEL==3?14:data.LEVEL==4?19:24}" paddingTop="1"
			 visible="{!data.hasOwnProperty('LEVEL')?false:data.LEVEL==0?false:true}"
			 text="{data.LEVEL}" verticalCenter="0" fontSize="8" 
			 toolTip="{'idFather: '+data.ID_FATHER}"
			 />
	
	
</s:ItemRenderer>